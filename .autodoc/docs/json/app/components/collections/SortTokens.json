{
  "fileName": "SortTokens.tsx",
  "filePath": "app/components/collections/SortTokens.tsx",
  "url": "zoo-labs/zoo/blob/master/app/components/collections/SortTokens.tsx",
  "summary": "The `SortTokens` component is responsible for rendering a dropdown menu that allows users to sort tokens based on different criteria. The component imports several components from the `components/primitives` and `components/primitives/Dropdown` directories, as well as some utility functions from external libraries such as `@radix-ui/react-dropdown-menu`, `@fortawesome/free-solid-svg-icons`, and `@fortawesome/react-fontawesome`.\n\nThe component defines a `type` called `Options` that represents the different sorting options available to the user. These options are `Price low to high`, `Price high to low`, `Rare to common`, and `Common to rare`. The component also defines an object called `options` that maps each option to a `sortBy` and `sortDirection` property. These properties are used to sort the tokens based on the user's selection.\n\nThe `SortTokens` component receives a single prop called `css` that is used to style the component. The component uses the `useRouter` hook from the `next/router` library to get the current query parameters from the URL. It then uses the `useState` hook to set the initial value of the `sortSelection` state to `Price low to high`. The `useMounted` hook from the `hooks` directory is used to check if the component is mounted before rendering. The `useMediaQuery` hook from the `react-responsive` library is used to check if the device width is less than or equal to 905 pixels.\n\nThe `useEffect` hook is used to update the `sortSelection` state based on the current query parameters. If the `sortBy` parameter is `rarity` and the `sortDirection` parameter is `desc`, the `sortSelection` state is set to `Common to rare`. If the `sortBy` parameter is `rarity` and the `sortDirection` parameter is `asc`, the `sortSelection` state is set to `Rare to common`. If the `sortBy` parameter is `floorAskPrice` and the `sortDirection` parameter is `desc`, the `sortSelection` state is set to `Price high to low`. Otherwise, the `sortSelection` state is set to `Price low to high`.\n\nThe `SortTokens` component returns a `DropdownMenu.Root` component that wraps a `DropdownMenu.Trigger` component and a `DropdownMenuContent` component. The `DropdownMenu.Trigger` component renders a `Button` component that displays the current `sortSelection` state. If the device width is less than or equal to 905 pixels, the `Button` component displays a `FontAwesomeIcon` component with the `faSort` icon. Otherwise, the `Button` component displays the `sortSelection` state and a `FontAwesomeIcon` component with the `faChevronDown` icon. The `DropdownMenuContent` component renders a list of `DropdownMenuItem` components that correspond to each sorting option. When a user clicks on a `DropdownMenuItem`, the `router.push` method is called to update the query parameters in the URL with the corresponding `sortBy` and `sortDirection` properties. The `shallow` option is set to `true` to prevent a full page reload.",
  "questions": "1. What does this code do?\n- This code exports a component called `SortTokens` that renders a dropdown menu with sorting options for tokens. When a user selects a sorting option, the component updates the URL query parameters to reflect the selected option.\n\n2. What external libraries does this code use?\n- This code uses several external libraries, including `@radix-ui/react-dropdown-menu`, `@fortawesome/free-solid-svg-icons`, `@fortawesome/react-fontawesome`, `next/router`, `react`, `react-responsive`, and `@stitches/react`.\n\n3. What is the purpose of the `options` object?\n- The `options` object maps each sorting option to an object with `sortBy` and `sortDirection` properties. These properties are used to update the URL query parameters when a user selects a sorting option.",
  "checksum": "83dc94fd84b41bad8441f68184d13d97"
}