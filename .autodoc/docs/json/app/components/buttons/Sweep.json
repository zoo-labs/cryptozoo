{
  "fileName": "Sweep.tsx",
  "filePath": "app/components/buttons/Sweep.tsx",
  "url": "zoo-labs/zoo/blob/master/app/components/buttons/Sweep.tsx",
  "summary": "The `Sweep` component is a React functional component that provides a button to sweep a user's NFT collection. The component imports various hooks and components from different packages and libraries. The `useConnectModal` hook is used to open a modal for connecting the user's wallet. The `SweepModal` component is used to display the modal for sweeping the user's collection. The `useMarketplaceChain` hook is used to get the marketplace chain ID. The `useNetwork` and `useSigner` hooks are used to get the active chain and signer respectively. The `useSwitchNetwork` hook is used to switch the network to the marketplace chain.\n\nThe `Sweep` component takes in several props, including `collectionId`, `buttonCss`, `buttonProps`, `buttonChildren`, and `mutate`. The `collectionId` prop is used to identify the user's collection. The `buttonCss`, `buttonProps`, and `buttonChildren` props are used to customize the button's appearance and text. The `mutate` prop is used to refresh the data after the sweep is complete.\n\nThe `Sweep` component renders a button that triggers the `SweepModal` component when clicked. If the user is not connected to a wallet or is on the wrong network, the button will open the connect modal or switch the network to the marketplace chain. If the user is connected to a wallet and on the correct network, the `SweepModal` component will be displayed.\n\nThe `SweepModal` component takes in several props, including `trigger`, `collectionId`, `referrer`, `referrerFeeBps`, and `onClose`. The `trigger` prop is the button that triggers the modal. The `collectionId` prop is the ID of the user's collection. The `referrer` and `referrerFeeBps` props are used to set any fees on top of orders. The `onClose` prop is a function that is called when the modal is closed. If the `mutate` prop is provided and the current step is `SweepStep.Complete`, the `mutate` function is called to refresh the data.\n\nOverall, the `Sweep` component provides a simple way for users to sweep their NFT collections with customizable buttons and fees. It also handles connecting the user's wallet and switching to the correct network if necessary.",
  "questions": "1. What does this code do?\n- This code exports a React functional component called `Sweep` that conditionally renders a button or a `SweepModal` component based on certain conditions. The component takes in several props including `collectionId`, `buttonCss`, `buttonProps`, `buttonChildren`, and `mutate`.\n\n2. What external libraries or dependencies does this code use?\n- This code imports several libraries and dependencies including `React`, `@rainbow-me/rainbowkit`, `@reservoir0x/reservoir-kit-ui`, `hooks` (which is likely a custom hook), `wagmi`, `@stitches/react`, `components/primitives`, and `swr`.\n\n3. What are the conditions that determine whether the button or `SweepModal` component is rendered?\n- The `canSweep` variable is set to true if `signer` is truthy, `collectionId` is truthy, and `isInTheWrongNetwork` is falsy. If `canSweep` is truthy, the `SweepModal` component is rendered with a `trigger` prop that is a `Button` component. If `canSweep` is falsy, a `Button` component is rendered with an `onClick` handler that checks if `isInTheWrongNetwork` is truthy and if so, attempts to switch the network to `marketplaceChain.id`. If `signer` is falsy, it opens a connect modal.",
  "checksum": "9dc6d0a214d6c40026be8a483956ce22"
}