{
  "fileName": "CancelListing.tsx",
  "filePath": "app/components/buttons/CancelListing.tsx",
  "url": "zoo-labs/zoo/blob/master/app/components/buttons/CancelListing.tsx",
  "summary": "The `CancelListing` component in the `zoo` project is responsible for rendering a modal that allows users to cancel a listing. The component imports several modules from different libraries, including `@rainbow-me/rainbowkit`, `@reservoir0x/reservoir-kit-ui`, `react`, `swr`, and `wagmi`. \n\nThe component takes in four props: `listingId`, `openState`, `trigger`, and `mutate`. `listingId` is a string that represents the ID of the listing that the user wants to cancel. `openState` is an optional array that contains a boolean value and a function to update the boolean value. `trigger` is a React element that triggers the modal when clicked. `mutate` is a function that updates the data in the cache when the modal is closed.\n\nThe component first checks if the user is on the correct network. If the user is not on the correct network, the component will display the `trigger` element and prompt the user to switch to the correct network. If the user is on the correct network, the component will render the `CancelListingModal` component from `@reservoir0x/reservoir-kit-ui`. \n\nThe `CancelListingModal` component takes in several props, including `listingId`, `openState`, `trigger`, `onCancelComplete`, `onCancelError`, and `onClose`. `listingId` is the ID of the listing that the user wants to cancel. `openState` is an optional array that contains a boolean value and a function to update the boolean value. `trigger` is the element that triggers the modal. `onCancelComplete` is a function that is called when the user successfully cancels the listing. `onCancelError` is a function that is called when there is an error canceling the listing. `onClose` is a function that is called when the modal is closed.\n\nThe `CancelListing` component also uses several hooks, including `useContext`, `useConnectModal`, `useMarketplaceChain`, `useSigner`, `useNetwork`, and `useSwitchNetwork`. `useContext` is used to access the `ToastContext` provider. `useConnectModal` is used to open the connect modal when the user is not connected to a wallet. `useMarketplaceChain` is used to get the chain ID of the marketplace. `useSigner` is used to get the signer object. `useNetwork` is used to get the active chain. `useSwitchNetwork` is used to switch to the marketplace chain.\n\nOverall, the `CancelListing` component is an important part of the `zoo` project as it allows users to cancel their listings. It uses several libraries and hooks to provide a seamless user experience. Below is an example of how the `CancelListing` component can be used in a React application:\n\n```\nimport CancelListing from 'zoo/CancelListing'\n\nfunction MyComponent() {\n  return (\n    <CancelListing\n      listingId=\"123\"\n      trigger={<button>Cancel Listing</button>}\n    />\n  )\n}\n```",
  "questions": "1. What is the purpose of this code?\n- This code exports a React component called `CancelListing` that renders a modal for canceling a listing and handles switching networks and displaying toasts.\n\n2. What external libraries or dependencies does this code use?\n- This code imports several modules from external libraries including `@rainbow-me/rainbowkit`, `@reservoir0x/reservoir-kit-ui`, `react`, `swr`, and `wagmi`.\n\n3. What props does the `CancelListing` component accept and what do they do?\n- The `CancelListing` component accepts four props: `listingId` (string), `openState` (optional tuple of boolean and React state setter), `trigger` (React element), and `mutate` (function from SWRResponse). These props are used to configure the modal and handle state updates and data fetching.",
  "checksum": "62f3fd94c0a497d5201841629ed20cb0"
}