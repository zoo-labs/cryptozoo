{
  "fileName": "Ether.ts",
  "filePath": "zdk/src/entities/Native/Ether.ts",
  "url": "zoo-labs/zoo/blob/master/zdk/src/entities/Native/Ether.ts",
  "summary": "The code above defines a class called `Ether` which extends another class called `NativeCurrency`. The purpose of this class is to represent the native currency of the Ethereum blockchain, which is called Ether (ETH). \n\nThe `Ether` class has a constructor that takes in a `chainId` parameter, which is used to identify the specific Ethereum network that the currency is being used on. The constructor also calls the constructor of the `NativeCurrency` class, passing in the `chainId`, a value of 18 for the number of decimal places, and the currency symbol and name as strings. \n\nThe `Ether` class has a method called `wrapped` which returns an instance of the `Token` class representing the wrapped version of Ether, which is called Wrapped Ether (WETH). The `WETH9` constant is imported from another file and is an object that maps Ethereum network IDs to instances of the `Token` class representing WETH on that network. The `wrapped` method looks up the appropriate `Token` instance based on the `chainId` of the `Ether` instance and returns it. \n\nThe `Ether` class also has a static method called `onChain` which takes in a `chainId` parameter and returns an instance of the `Ether` class for that specific network. This method uses a private static property called `_etherCache` to cache instances of the `Ether` class for each network ID. If an instance for the specified `chainId` already exists in the cache, it is returned. Otherwise, a new instance is created and added to the cache before being returned. \n\nFinally, the `Ether` class overrides the `equals` method of the `Currency` class to check if the other currency is a native currency on the same network as the `Ether` instance. \n\nOverall, this code provides a convenient way to work with Ether and WETH in a TypeScript project that interacts with the Ethereum blockchain. Developers can use the `Ether` class to represent the native currency of the network they are working with, and the `wrapped` method to get an instance of the `Token` class representing WETH on that network. The `onChain` method can be used to get an `Ether` instance for a specific network ID, and the `equals` method can be used to compare currencies to see if they are native currencies on the same network.",
  "questions": "1. What is the purpose of the `Ether` class?\n- The `Ether` class represents the native currency of the Ethereum blockchain and provides functionality for working with it.\n\n2. What is the `wrapped` method used for?\n- The `wrapped` method returns the wrapped version of Ether (WETH) for the current chain, and throws an error if it is not available.\n\n3. What is the significance of the `_etherCache` property?\n- The `_etherCache` property is used to cache instances of the `Ether` class for each chain ID, so that they can be reused instead of creating new instances every time they are needed.",
  "checksum": "8428f7cb95d0e55bc3cb75aa7ea877f2"
}