{
  "fileName": "index.jsx",
  "filePath": "lab/src/components/Contract/index.jsx",
  "url": "zoo-labs/zoo/blob/master/lab/src/components/Contract/index.jsx",
  "summary": "The `Contract` component is a React component that displays information about a smart contract. It takes in several props, including `customContract`, `account`, `gasPrice`, `signer`, `provider`, `name`, `show`, `price`, `blockExplorer`, and `chainId`. \n\nThe component first uses the `useContractLoader` hook to load all contracts available on the specified `provider` and `chainId`. If a `customContract` is provided, it uses that instead. It then checks if the contract is deployed at the specified address using the `useContractExistsAtAddress` hook.\n\nThe component then filters the contract's functions to only display those that are of type \"function\" and are not excluded by the `show` prop. If a function is queryable (i.e. has no inputs), it displays the return value using the `DisplayVariable` component. If a function has inputs, it displays a form using the `FunctionForm` component to allow users to provide these inputs.\n\nFinally, the component renders a `Card` from the `antd` library that displays the contract's name, address, and account information. If the contract is deployed, it displays the contract functions. Otherwise, it displays a loading message that instructs the user to run `yarn run chain` and `yarn run deploy` to deploy the contract.\n\nThis component can be used to display information about any smart contract in a React application. For example, it could be used in a decentralized application to display information about a user's deployed smart contracts or to allow users to interact with a specific smart contract. \n\nExample usage:\n\n```\n<Contract\n  provider={provider}\n  name=\"MyContract\"\n  show={[\"myFunction\"]}\n  account={account}\n  gasPrice={gasPrice}\n  signer={signer}\n  price={price}\n  blockExplorer={blockExplorer}\n  chainId={chainId}\n/>\n```",
  "questions": "1. What is the purpose of the `Contract` component?\n- The `Contract` component is used to display information about a smart contract, including its functions and address.\n\n2. What is the `noContractDisplay` variable used for?\n- The `noContractDisplay` variable is used to display a message when the contract has not been deployed yet.\n\n3. What is the purpose of the `isQueryable` function?\n- The `isQueryable` function is used to determine if a contract function is queryable, meaning it has no inputs and is either a \"view\" or \"pure\" function.",
  "checksum": "1e7d430d738ffbbc41a5cf1f77fa3ffe"
}