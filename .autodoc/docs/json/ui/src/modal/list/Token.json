{
  "fileName": "Token.tsx",
  "filePath": "ui/src/modal/list/Token.tsx",
  "url": "zoo-labs/zoo/blob/master/ui/src/modal/list/Token.tsx",
  "summary": "The `Token` component is a React functional component that renders a single NFT (non-fungible token) item. It receives two optional props: `token` and `collection`. The `token` prop is an object that contains information about the NFT, such as its name, image, and collection. The `collection` prop is an object that contains information about the collection that the NFT belongs to, such as its name and image.\n\nThe component first uses the `optimizeImage` function from the `lib` directory to optimize the image of the NFT. This function takes an image URL and a maximum width as arguments and returns a new URL that points to an optimized version of the image. The optimized image is then used as the source of an `Img` component, which is a styled `img` HTML element.\n\nThe `Token` component then renders a `Box` component that contains the `Img` component, the name of the NFT, and the name of the collection that the NFT belongs to. The `Box` component is styled to have a fixed width of 120 pixels and a margin of 4 pixels on the right side. On screens with a width of 600 pixels or more (using the `@bp1` media query), the `Box` component has a width of 100% and no margin.\n\nThe name of the NFT is rendered as an `h6` HTML element with ellipsis overflow and a flex property of 1, which allows it to take up the remaining horizontal space in the `Box` component. If the `token` prop is not provided or does not contain a name, the component renders the NFT's `tokenId` instead.\n\nThe name of the collection is rendered as a `Text` component with a `subtitle2` style and ellipsis overflow. If the `token` prop is not provided or does not contain a collection name, the component does not render anything.\n\nThis component can be used in a larger project that displays a collection of NFTs, such as a marketplace or a gallery. It can be used to render a grid of NFT items, each with its own name and image. The `Token` component can be customized by passing different `token` and `collection` props, or by modifying its styles using the `styled` function from the `stitches.config` file. For example, the `Img` component can be styled to have a different border radius or object fit.",
  "questions": "1. What are the dependencies of this file?\n- The file imports `useTokens` and `useCollections` from a file located two directories up, and `React`, `FC`, and `styled` from other packages.\n\n2. What is the purpose of the `optimizeImage` function?\n- The `optimizeImage` function takes an image URL and a size and returns a new URL that points to an optimized version of the image with the specified size.\n\n3. What is the purpose of the `Token` component?\n- The `Token` component takes a `token` and a `collection` as props and renders an image, a name, and a collection name for the token. It also uses the `optimizeImage` function to optimize the image URL.",
  "checksum": "ee092a310d6a901df46e78ff3d512802"
}