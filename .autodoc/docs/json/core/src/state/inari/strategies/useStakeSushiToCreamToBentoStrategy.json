{
  "fileName": "useStakeSushiToCreamToBentoStrategy.ts",
  "filePath": "core/src/state/inari/strategies/useStakeSushiToCreamToBentoStrategy.ts",
  "url": "zoo-labs/zoo/blob/master/core/src/state/inari/strategies/useStakeSushiToCreamToBentoStrategy.ts",
  "summary": "This code defines a custom hook called `useStakeSushiToCreamToBentoStrategy` that returns a `StrategyHook` object. This hook is used to stake SUSHI tokens for xSUSHI into Cream and deposit crXSUSHI into BentoBox in one click. \n\nThe `StrategyHook` object returned by this hook includes a `setBalances` function and a `calculateOutputFromInput` function. The `setBalances` function sets the input and output token balances for the strategy. The `calculateOutputFromInput` function calculates the output token amount based on the input token amount and the current exchange rate.\n\nThe `GENERAL` function returns an object that contains general information about the strategy, such as the name, steps, zap method, and description. The `tokenDefinitions` object defines the input and output tokens for the strategy.\n\nThe hook uses several other hooks and functions to implement the strategy. The `useActiveWeb3React` hook is used to get the current account. The `useZenkoContract` hook is used to get the Zenko contract instance. The `useTokenBalances` hook is used to get the SUSHI token balance for the current account. The `useSushiPerXSushi` hook is used to get the current exchange rate between SUSHI and xSUSHI. The `useBentoBalance` hook is used to get the crXSUSHI balance in BentoBox for the current account. The `useBaseStrategy` hook is used to get the base strategy object. The `useBentoBoxTrait` hook is used to add the BentoBox trait to the strategy.\n\nThe `calculateOutputFromInput` function uses the exchange rate and the Zenko contract to calculate the output token amount based on the input token amount. If `zapIn` is true, it calculates the crXSUSHI amount based on the SUSHI amount. If `zapIn` is false, it calculates the SUSHI amount based on the crXSUSHI amount.\n\nOverall, this code defines a custom hook that implements a specific strategy for staking SUSHI tokens for xSUSHI into Cream and depositing crXSUSHI into BentoBox in one click. This hook can be used in the larger project to provide a convenient way for users to execute this strategy.",
  "questions": "1. What is the purpose of this code?\n- This code defines a strategy for staking SUSHI for xSUSHI into Cream and depositing crXSUSHI into BentoBox in one click.\n\n2. What tokens are involved in this strategy?\n- The input token is SUSHI and the output token is crXSUSHI.\n\n3. What hooks and functions are being used in this code?\n- The code is using several hooks including `useActiveWeb3React`, `useZenkoContract`, `useCallback`, `useEffect`, `useMemo`, `useLingui`, `useSushiPerXSushi`, `useTokenBalances`, and `useBentoBalance`. It is also using several functions including `e10` and `tryParseAmount`.",
  "checksum": "b83929f2c30e3fa37c6c1b059876c1bc"
}