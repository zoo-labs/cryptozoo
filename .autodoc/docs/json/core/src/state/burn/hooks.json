{
  "fileName": "hooks.ts",
  "filePath": "core/src/state/burn/hooks.ts",
  "url": "zoo-labs/zoo/blob/master/core/src/state/burn/hooks.ts",
  "summary": "The code is a module that exports two React hooks: `useDerivedBurnInfo` and `useBurnActionHandlers`. These hooks are used to manage the state of a burn action in a decentralized exchange (DEX) application. \n\nThe `useDerivedBurnInfo` hook takes two arguments, `currencyA` and `currencyB`, which are instances of the `Currency` class from the `@zoolabs/zdk` library. It returns an object with four properties: `pair`, `parsedAmounts`, `error`, and `userLiquidity`. \n\nThe `pair` property is an instance of the `Pair` class from the `@zoolabs/zdk` library, which represents a pair of tokens in the DEX. The `parsedAmounts` property is an object that contains four properties: `LIQUIDITY_PERCENT`, `LIQUIDITY`, `CURRENCY_A`, and `CURRENCY_B`. These properties represent the parsed amounts of liquidity, token A, and token B that the user wants to burn. The `error` property is a string that represents any error that occurred during the parsing of the user input. The `userLiquidity` property is an instance of the `CurrencyAmount` class from the `@zoolabs/zdk` library, which represents the amount of liquidity tokens that the user has in their wallet.\n\nThe `useBurnActionHandlers` hook returns an object with one property: `onUserInput`. This property is a callback function that takes two arguments, `field` and `typedValue`, and dispatches an action to update the state of the burn action in the Redux store.\n\nThe `useDerivedBurnInfo` hook uses several other hooks to derive its state. The `useActiveWeb3React` hook is used to get the current Ethereum account and chain ID. The `useLingui` hook is used to get the current language for localization. The `useTokenBalances` hook is used to get the token balances for the current account. The `useTotalSupply` hook is used to get the total supply of the liquidity token for the current pair. The `useV2Pair` hook is used to get the pair instance for the current pair of tokens.\n\nThe `useDerivedBurnInfo` hook calculates the parsed amounts of liquidity, token A, and token B based on the user input and the current state of the DEX. It also calculates any errors that occurred during the parsing of the user input.\n\nThe `useBurnActionHandlers` hook dispatches an action to update the state of the burn action in the Redux store based on the user input.\n\nOverall, these hooks are used to manage the state of a burn action in a DEX application. They use several other hooks to derive their state and dispatch actions to update the Redux store.",
  "questions": "1. What is the purpose of the `useDerivedBurnInfo` function?\n- The `useDerivedBurnInfo` function is used to derive information related to burning tokens in a liquidity pool, including the liquidity pair, parsed amounts, error messages, and user liquidity.\n\n2. What is the significance of the `Field` enum?\n- The `Field` enum is used to identify the different fields that can be updated by the user when burning tokens in a liquidity pool, including liquidity percent, liquidity amount, currency A amount, and currency B amount.\n\n3. What is the role of the `useBurnActionHandlers` function?\n- The `useBurnActionHandlers` function returns an object with a single function `onUserInput`, which is used to dispatch an action to update the `typedValue` of a specific `Field` when the user inputs a new value.",
  "checksum": "d2e17d719cf0260f1616a48c81c3e390"
}