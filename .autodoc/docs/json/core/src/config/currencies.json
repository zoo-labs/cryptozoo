{
  "fileName": "currencies.ts",
  "filePath": "core/src/config/currencies.ts",
  "url": "zoo-labs/zoo/blob/master/core/src/config/currencies.ts",
  "summary": "The code above is a module that exports several functions and constants related to currency and token management in the zoo project. \n\nThe first line imports several modules from the '@zoolabs/zdk' library, including ChainId, Currency, getCurrencyMap, getSymbolCurrency, CurrencySymbol, and Token. These modules are used to manage different types of currencies and tokens in the zoo project.\n\nThe second line imports a JSON file called 'contracts.json', which contains information about the different contracts used in the zoo project. This file is used to map token addresses to their corresponding currencies.\n\nThe third line exports the 'contracts' constant, which is simply the imported 'contractsJson' object.\n\nThe fourth line exports the 'SUPPORTED_PAYMENT_CURRENCIES' constant, which is an array of CurrencySymbol objects representing the payment currencies supported by the zoo project. These include ETH, USDC, USDT, and WETH.\n\nThe fifth function, 'getCurrencyToken', takes a token address and a chain ID as arguments and returns the corresponding Currency or Token object. It does this by calling the 'getCurrencyMap' function from the '@zoolabs/zdk' library, passing in the 'contractsJson' object as an argument. This function returns a map of token addresses to Currency and Token objects, which is then indexed by the chain ID and token address to retrieve the desired object.\n\nThe sixth function, 'getCurrencyTokenLowerCase', is similar to 'getCurrencyToken', but it converts the token address and all keys in the map to lowercase before performing the lookup. This allows for case-insensitive matching of token addresses.\n\nThe seventh function, 'getSupportedPaymentCurrencies', takes a chain ID as an argument and returns an array of Currency objects corresponding to the payment currencies supported by the zoo project. It does this by mapping over the 'SUPPORTED_PAYMENT_CURRENCIES' array and calling the 'getSymbolCurrency' function from the '@zoolabs/zdk' library, passing in the 'contractsJson' object, chain ID, and currency symbol as arguments. This function returns the corresponding Currency object for each symbol.\n\nOverall, this module provides a set of functions and constants that can be used to manage currencies and tokens in the zoo project. For example, the 'getCurrencyToken' function could be used to retrieve the Currency object for a given token address and chain ID, while the 'getSupportedPaymentCurrencies' function could be used to retrieve an array of Currency objects representing the payment currencies supported by the project.",
  "questions": "1. What is the purpose of the `contracts.json` file and how is it used in this code?\n- The `contracts.json` file is imported and used to create a currency map in the `getCurrencyToken` and `getCurrencyTokenLowerCase` functions, as well as to retrieve symbol currencies in the `getSupportedPaymentCurrencies` function.\n\n2. What is the difference between `Currency` and `Token` types in this code?\n- `Currency` represents a generic currency, while `Token` represents a specific token on a particular blockchain. Both types can be returned by the `getCurrencyToken` and `getCurrencyTokenLowerCase` functions.\n\n3. Are there any other payment currencies that can be supported besides the ones listed in `SUPPORTED_PAYMENT_CURRENCIES`?\n- It is unclear from this code whether there are other payment currencies that can be supported. The `SUPPORTED_PAYMENT_CURRENCIES` array only includes four currency symbols, and the `getSupportedPaymentCurrencies` function only returns currencies based on those symbols.",
  "checksum": "c8d03852a2143d12a9f77468c65f44c6"
}