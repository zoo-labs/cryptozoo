{
  "fileName": "index.tsx",
  "filePath": "core/src/components/CurrencyLogo/index.tsx",
  "url": "zoo-labs/zoo/blob/master/core/src/components/CurrencyLogo/index.tsx",
  "summary": "This code defines a React component called `CurrencyLogo` that renders a logo for a given cryptocurrency. The logo is fetched from various sources, including the SushiSwap token icon repository and the TrustWallet asset repository. The component takes a `currency` prop, which is an object that represents the cryptocurrency to display. The `currency` object must have a `symbol` property that represents the currency's ticker symbol, and may also have a `chainId` property that represents the ID of the blockchain on which the currency is issued. If the `currency` object is not provided or is invalid, the component will render a default \"unknown\" logo.\n\nThe `CurrencyLogo` component first calls the `useHttpLocations` hook to fetch the logo URI for the given currency. If the currency is a wrapped token, the component will use the `logoURI` property of the `WrappedTokenInfo` object, or the `logoURI` property of the `tokenInfo` object if the former is not defined. The `useHttpLocations` hook returns an array of possible logo URLs based on the URI, which are then used to fetch the logo image.\n\nIf the currency is a native token (e.g. ETH or BNB), the component will use a pre-defined logo URL based on the currency's `chainId`. If the currency is a token other than a wrapped token, the component will call the `getCurrencyLogoUrls` function to generate an array of possible logo URLs based on the currency's `symbol` and `chainId`. The `getCurrencyLogoUrls` function first generates a URL based on the currency's symbol, then generates two additional URLs based on the currency's `chainId` and address. These URLs are then returned as an array.\n\nThe `CurrencyLogo` component then generates an array of logo URLs by concatenating the URI locations returned by `useHttpLocations` with the default logo URLs generated by `getCurrencyLogoUrls`. If the currency is a native token, the component will also include the pre-defined logo URL for the currency's `chainId`. If the currency is invalid or not provided, the component will include the \"unknown\" logo URL.\n\nFinally, the `CurrencyLogo` component renders a `Logo` component with the generated logo URLs, as well as the `width`, `height`, `alt`, `className`, and other props passed to it. The `Logo` component is defined in a separate file and is not included in this code snippet.\n\nThis component can be used in various parts of the larger project to display logos for different cryptocurrencies. For example, it could be used in a wallet interface to display the logos of the user's assets, or in a trading interface to display the logos of the tokens being traded. Here is an example usage of the `CurrencyLogo` component:\n\n```jsx\nimport { Currency } from \"@zoolabs/zdk\";\nimport CurrencyLogo from \"./CurrencyLogo\";\n\nfunction MyComponent() {\n  const currency: Currency = { symbol: \"ETH\", chainId: 1 };\n  return <CurrencyLogo currency={currency} size=\"32px\" />;\n}\n```",
  "questions": "1. What is the purpose of the `getCurrencyLogoUrls` function?\n   - The `getCurrencyLogoUrls` function returns an array of logo URLs for a given currency, based on its symbol and chain ID.\n2. What is the `LOGO` object used for?\n   - The `LOGO` object maps chain IDs to logo URLs for specific chains, and is used to display logos for native currencies on those chains.\n3. What is the `CurrencyLogo` component used for?\n   - The `CurrencyLogo` component is a reusable React component that displays a logo for a given currency, using the `Logo` component and the `getCurrencyLogoUrls` function to determine the appropriate logo URLs.",
  "checksum": "80a4f13a337eaafdaa886a582daff025"
}