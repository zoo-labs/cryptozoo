{
  "fileName": "ListToggle.tsx",
  "filePath": "core/src/components/Toggle/ListToggle.tsx",
  "url": "zoo-labs/zoo/blob/master/core/src/components/Toggle/ListToggle.tsx",
  "summary": "The code defines a React component called `ListToggle` that renders a toggle switch. The component takes in four props: `id`, `isActive`, `bgColor`, and `toggle`. \n\nThe `id` prop is an optional string that sets the `id` attribute of the toggle switch. The `isActive` prop is a boolean that determines whether the toggle switch is on or off. The `bgColor` prop is a string that sets the background color of the toggle switch when it is on. The `toggle` prop is a function that is called when the toggle switch is clicked.\n\nThe component returns a `div` element that represents the toggle switch. The `className` attribute of the `div` element is set based on the value of the `isActive` prop. If `isActive` is true, the `className` is set to `\"bg-dark-700 text-high-emphesis\"`, which sets the background color to a dark shade and the text color to a high emphasis color. If `isActive` is false, the `className` is set to `\"bg-dark-800 text-primary\"`, which sets the background color to a slightly lighter shade and the text color to a primary color.\n\nThe `onClick` attribute of the `div` element is set to the `toggle` prop, which means that the `toggle` function is called when the toggle switch is clicked.\n\nThe `div` element contains three child elements. The first child element is only rendered if `isActive` is true. It is a `div` element with the text \"ON\" and some styling applied to it. The second child element is always rendered. It is a `div` element that represents the toggle switch itself. Its background color is set to `bgColor` if `isActive` is true, and it has a default background color of `\"bg-dark-700\"` if `isActive` is false. The third child element is only rendered if `isActive` is false. It is a `div` element with the text \"OFF\" and some styling applied to it.\n\nThis component can be used in a larger project to allow users to toggle a setting on or off. The `isActive` prop can be set based on the current state of the setting, and the `toggle` prop can be set to a function that updates the state of the setting when the toggle switch is clicked. Here is an example of how the component can be used:\n\n```\nimport React, { useState } from 'react'\nimport ListToggle from './ListToggle'\n\nexport default function App() {\n  const [isDarkMode, setIsDarkMode] = useState(false)\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode)\n  }\n\n  return (\n    <div className={isDarkMode ? 'dark' : ''}>\n      <ListToggle\n        isActive={isDarkMode}\n        bgColor=\"#4A5568\"\n        toggle={toggleDarkMode}\n      />\n      <p>This is some text that will be styled differently in dark mode.</p>\n    </div>\n  )\n}\n```\n\nIn this example, the `App` component has a state variable called `isDarkMode` that determines whether the app is in dark mode or not. The `toggleDarkMode` function updates the `isDarkMode` state variable when the toggle switch is clicked. The `ListToggle` component is rendered with the `isActive` prop set to `isDarkMode`, the `bgColor` prop set to `#4A5568`, and the `toggle` prop set to `toggleDarkMode`. The `className` of the `div` element that wraps the app is set to `\"dark\"` if `isDarkMode` is true, which applies some dark mode styles to the app. The `p` element contains some text that will be styled differently in dark mode.",
  "questions": "1. What is the purpose of this code?\n   - This code exports a React component called `ListToggle` that renders a toggle switch with customizable background color and text labels for on and off states.\n\n2. What are the required props for the `ListToggle` component?\n   - The `ListToggle` component requires `isActive` (a boolean indicating whether the toggle is on or off) and `toggle` (a function to be called when the toggle is clicked) props. It also accepts optional `id` (a string for the HTML `id` attribute) and `bgColor` (a string for the background color of the toggle when it is on) props.\n\n3. What CSS classes are applied to the `ListToggle` component?\n   - The `ListToggle` component applies different CSS classes based on the `isActive` prop. When `isActive` is true, it applies the classes `bg-dark-700` and `text-high-emphesis`, and when `isActive` is false, it applies the classes `bg-dark-800` and `text-primary`. It also applies the classes `rounded-full`, `flex`, `items-center`, `outline-none`, `cursor-pointer`, `border-none`, `py-1`, `px-3`, and `space-x-3` to both states.",
  "checksum": "b11fc3d8ca90f28f6d277b00b50307b2"
}