{
  "fileName": "mapping.ts",
  "filePath": "core/src/functions/moralis/mapping.ts",
  "url": "zoo-labs/zoo/blob/master/core/src/functions/moralis/mapping.ts",
  "summary": "The code above contains two functions, `mapEgg` and `mapAnimal`, that are used to map data from two different objects, `egg` and `animal`, respectively. These functions are exported and can be used in other parts of the project.\n\nThe `mapEgg` function takes an `egg` object as input and returns a new object with specific properties from the `egg` object. The returned object has properties such as `tokenID`, `name`, `kind`, `type`, `animalID`, `basic`, `burned`, `hatched`, `interactive`, `owner`, `parentA`, `parentB`, `timeRemaining`, `createdAt`, `updatedAt`, and `CTAOverride`. These properties are obtained from the `egg` object using the `get` method. If the `get` method is not defined on the `egg` object, it is defined as a function that returns the value of the specified key. The `mapEgg` function is useful for mapping egg data to a format that can be used in other parts of the project.\n\nHere is an example of how `mapEgg` can be used:\n\n```\nconst egg = {\n  tokenID: 123,\n  name: 'Dragon Egg',\n  kind: 'Fire',\n  type: 'basic',\n  animalID: 456,\n  burn: false,\n  hatched: false,\n  interactive: true,\n  owner: 'Alice',\n  parentA: 789,\n  parentB: 1011,\n  timeRemaining: 3600,\n  createdAt: '2022-01-01',\n  updatedAt: '2022-01-02',\n  CTAOverride: 'Buy Now'\n}\n\nconst mappedEgg = mapEgg(egg)\n\nconsole.log(mappedEgg)\n// Output: \n// {\n//   tokenID: 123,\n//   name: 'Dragon Egg',\n//   kind: 'Fire',\n//   type: 'basic',\n//   animalID: 456,\n//   basic: true,\n//   burned: false,\n//   hatched: false,\n//   interactive: true,\n//   owner: 'Alice',\n//   parentA: 789,\n//   parentB: 1011,\n//   timeRemaining: 3600,\n//   createdAt: '2022-01-01',\n//   updatedAt: '2022-01-02',\n//   CTAOverride: 'Buy Now'\n// }\n```\n\nThe `mapAnimal` function takes an `animal` object as input and returns a new object with specific properties from the `animal` object. The returned object has properties such as `owner`, `tokenID`, `name`, `description`, `yield`, `boost`, `rarity`, `dob`, `startBid`, `currentBid`, `imageUrl`, `listed`, `bloodline`, `selected`, `bred`, `breedCount`, `kind`, `timeRemaining`, `CTAOverride`, `lastBred`, `buyNow`, `revealed`, and `freed`. These properties are obtained from the `animal` object using the `get` method. If the `get` method is not defined on the `animal` object, it is defined as a function that returns the value of the specified key. The `mapAnimal` function is useful for mapping animal data to a format that can be used in other parts of the project.\n\nHere is an example of how `mapAnimal` can be used:\n\n```\nconst animal = {\n  owner: 'Bob',\n  tokenID: 789,\n  name: 'Fire Dragon',\n  NA: 'A fierce dragon that breathes fire',\n  yield: 10,\n  boost: 2,\n  rarity: 'Rare',\n  timestamp: '2022-01-01',\n  startBid: 100,\n  currentBid: 150,\n  tokenURI: 'https://example.com/fire-dragon',\n  listed: true,\n  kind: 2,\n  breedCount: 0,\n  timeRemaining: 3600,\n  CTAOverride: 'Bid Now',\n  lastBred: '2022-01-01',\n  buyNow: 200,\n  revealed: true,\n  freed: false\n}\n\nconst mappedAnimal = mapAnimal(animal)\n\nconsole.log(mappedAnimal)\n// Output:\n// {\n//   owner: 'Bob',\n//   tokenID: 789,\n//   name: 'Fire Dragon',\n//   description: 'A fierce dragon that breathes fire',\n//   yield: 10,\n//   boost: 2,\n//   rarity: 'Rare',\n//   dob: '2022-01-01',\n//   startBid: 100,\n//   currentBid: 150,\n//   imageUrl: 'https://example.com/fire-dragon',\n//   listed: true,\n//   bloodline: '',\n//   selected: false,\n//   bred: false,\n//   breedCount: 0,\n//   kind: 2,\n//   timeRemaining: 3600,\n//   CTAOverride: 'Bid Now',\n//   lastBred: '2022-01-01',\n//   buyNow: 200,\n//   revealed: true,\n//   freed: false\n// }\n```\n\nIn summary, the `mapEgg` and `mapAnimal` functions are used to map data from `egg` and `animal` objects to new objects with specific properties. These functions are useful for formatting data in a way that can be used in other parts of the project.",
  "questions": "1. What is the purpose of the `mapEgg` function?\n- The `mapEgg` function takes an `egg` object and returns a new object with specific properties and values extracted from the `egg` object.\n\n2. What is the purpose of the `mapAnimal` function?\n- The `mapAnimal` function takes an `animal` object and returns a new object with specific properties and values extracted from the `animal` object.\n\n3. What is the significance of the `get` function used in both `mapEgg` and `mapAnimal`?\n- The `get` function is used to retrieve the value of a specific key from the `egg` or `animal` object. If the key does not exist in the object, the `get` function returns `undefined`. The `if` statement checks if the `get` function exists in the object and adds it if it doesn't, allowing the function to be used on any object that doesn't have a `get` method.",
  "checksum": "519b2d4d5db6cf86968b1db6acac8773"
}