{
  "fileName": "Manage.tsx",
  "filePath": "core/src/modals/SearchModal/Manage.tsx",
  "url": "zoo-labs/zoo/blob/master/core/src/modals/SearchModal/Manage.tsx",
  "summary": "The `Manage` component is a React component that renders a modal for managing token lists and tokens. It imports several components and libraries, including `React`, `AutoSizer`, `Column`, `CurrencyModalView`, `ModalHeader`, `Token`, `TokenList`, `t`, `useLingui`, and `classNames`. \n\nThe component takes in several props, including `onDismiss`, `setModalView`, `setImportToken`, `setImportList`, and `setListUrl`. These props are used to handle user interactions and state changes within the component. \n\nThe component renders a modal header with a title of \"Manage\" and a back button that sets the modal view to `CurrencyModalView.search`. Below the header, there is a tab bar with two tabs: \"Lists\" and \"Tokens\". The currently active tab is highlighted with a darker background color. \n\nWhen the \"Lists\" tab is active, the component renders a `ManageLists` component that is wrapped in an `AutoSizer` component. The `AutoSizer` component resizes the `ManageLists` component to fit the available height of the screen. The `ManageLists` component takes in several props, including `height`, `setModalView`, `setImportList`, and `setListUrl`. These props are used to handle user interactions and state changes within the `ManageLists` component. \n\nWhen the \"Tokens\" tab is active, the component renders a `ManageTokens` component. The `ManageTokens` component takes in several props, including `setModalView` and `setImportToken`. These props are used to handle user interactions and state changes within the `ManageTokens` component. \n\nOverall, the `Manage` component provides a user interface for managing token lists and tokens. It allows users to switch between managing lists and tokens, and provides a way to import lists and tokens. The component is likely used as part of a larger project that involves interacting with cryptocurrency tokens and exchanges. \n\nExample usage:\n\n```jsx\nimport Manage from \"./Manage\";\n\nfunction App() {\n  const [showManage, setShowManage] = useState(false);\n\n  return (\n    <div>\n      <button onClick={() => setShowManage(true)}>Manage Tokens</button>\n      {showManage && (\n        <Manage\n          onDismiss={() => setShowManage(false)}\n          setModalView={(view) => console.log(view)}\n          setImportToken={(token) => console.log(token)}\n          setImportList={(list) => console.log(list)}\n          setListUrl={(url) => console.log(url)}\n        />\n      )}\n    </div>\n  );\n}\n```",
  "questions": "1. What dependencies does this code use?\n- This code uses React, react-virtualized-auto-sizer, and @lingui/macro as dependencies.\n\n2. What is the purpose of the Manage component?\n- The Manage component is responsible for rendering a modal that allows the user to manage lists and tokens.\n\n3. What props does the Manage component expect?\n- The Manage component expects onDismiss, setModalView, setImportList, setImportToken, and setListUrl as props, all of which are functions.",
  "checksum": "e4c649d51a8a8c900db66ca23d0a92ce"
}