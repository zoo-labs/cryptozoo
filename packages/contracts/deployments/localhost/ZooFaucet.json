{
  "address": "0xB20F3A53f395cFd6461f1999ff4B70573dAF6b95",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "zooAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ZooSent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getZoo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6f5036d3453f8785efe181985dbd08f913f53d172385a0535fc8f7b3f2f44f81",
  "receipt": {
    "to": null,
    "from": "0xd0AEF8b960d43418DC0A83DD0cAc04A3793De3E0",
    "contractAddress": "0xB20F3A53f395cFd6461f1999ff4B70573dAF6b95",
    "transactionIndex": 0,
    "gasUsed": "458213",
    "logsBloom": "0x
    "blockHash": "0xfa34b19c288aca54a9d191b36928ad11796655698ecd004ddd6f2475be4bf768",
    "transactionHash": "0x6f5036d3453f8785efe181985dbd08f913f53d172385a0535fc8f7b3f2f44f81",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 296,
        "transactionHash": "0x6f5036d3453f8785efe181985dbd08f913f53d172385a0535fc8f7b3f2f44f81",
        "address": "0xB20F3A53f395cFd6461f1999ff4B70573dAF6b95",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d0aef8b960d43418dc0a83dd0cac04a3793de3e0"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xfa34b19c288aca54a9d191b36928ad11796655698ecd004ddd6f2475be4bf768"
      }
    ],
    "blockNumber": 296,
    "cumulativeGasUsed": "458213",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x117FbB2f404e2F1e9FbaC0DdB372C25dD979bc60"
  ],
  "solcInputHash": "96ed39cd36be3a398a7b4c1cf440a2d9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"zooAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ZooSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getZoo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZooFaucet.sol\":\"ZooFaucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"src/ZooFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.4;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ZooFaucet is Ownable {\\n    uint256 public rate = 1000;\\n\\n    IERC20 token;\\n\\n    event ZooSent(\\n        address indexed _to,\\n        uint256 indexed _amount\\n    );\\n\\n    constructor(address zooAddress) {\\n        token = IERC20(zooAddress);\\n    }\\n\\n    function getZoo(address to, uint256 amount) public returns (uint256) {\\n        require(amount > 0);\\n        amount = amount * rate;\\n        require(amount <= token.balanceOf(address(this)));\\n        token.transfer(to, amount);\\n        emit ZooSent(msg.sender, amount);\\n        return amount;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        token.transfer(owner(), token.balanceOf(address(this)));\\n    }\\n}\\n\",\"keccak256\":\"0xae6db04834f4f0f4c3b10e00b730eae39f15b9cb70fb739ee05e6e36aebe6715\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526103e860015534801561001657600080fd5b506040516106f73803806106f7833981016040819052610035916100b3565b61003e33610063565b600280546001600160a01b0319166001600160a01b03929092169190911790556100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c4578081fd5b81516001600160a01b03811681146100da578182fd5b9392505050565b610607806100f06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806315752841146100675780632c4e722e1461008d5780633ccfd60b14610096578063715018a6146100a05780638da5cb5b146100a8578063f2fde38b146100bd575b600080fd5b61007a6100753660046104e3565b6100d0565b6040519081526020015b60405180910390f35b61007a60015481565b61009e610230565b005b61009e610373565b6100b06103ae565b6040516100849190610544565b61009e6100cb3660046104c2565b6103bd565b60008082116100de57600080fd5b6001546100eb90836105a6565b6002546040516370a0823160e01b81529193506001600160a01b0316906370a082319061011c903090600401610544565b60206040518083038186803b15801561013457600080fd5b505afa158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c919061052c565b82111561017857600080fd5b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906101aa9086908690600401610558565b602060405180830381600087803b1580156101c457600080fd5b505af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc919061050c565b50604051829033907f02405878159593cb3e0979693d52f3454344017c044f661134cb8563fe1783e190600090a350919050565b336102396103ae565b6001600160a01b0316146102685760405162461bcd60e51b815260040161025f90610571565b60405180910390fd5b6002546001600160a01b031663a9059cbb6102816103ae565b6002546040516370a0823160e01b81526001600160a01b03909116906370a08231906102b1903090600401610544565b60206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610301919061052c565b6040518363ffffffff1660e01b815260040161031e929190610558565b602060405180830381600087803b15801561033857600080fd5b505af115801561034c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610370919061050c565b50565b3361037c6103ae565b6001600160a01b0316146103a25760405162461bcd60e51b815260040161025f90610571565b6103ac6000610456565b565b6000546001600160a01b031690565b336103c66103ae565b6001600160a01b0316146103ec5760405162461bcd60e51b815260040161025f90610571565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025f565b610370815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104bd57600080fd5b919050565b6000602082840312156104d3578081fd5b6104dc826104a6565b9392505050565b600080604083850312156104f5578081fd5b6104fe836104a6565b946020939093013593505050565b60006020828403121561051d578081fd5b815180151581146104dc578182fd5b60006020828403121561053d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156105cc57634e487b7160e01b81526011600452602481fd5b50029056fea26469706673582212208d37d4ab0cda8717204a97aa3d47b58823d8ac0f66d68dd5acdf2690adfff65e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806315752841146100675780632c4e722e1461008d5780633ccfd60b14610096578063715018a6146100a05780638da5cb5b146100a8578063f2fde38b146100bd575b600080fd5b61007a6100753660046104e3565b6100d0565b6040519081526020015b60405180910390f35b61007a60015481565b61009e610230565b005b61009e610373565b6100b06103ae565b6040516100849190610544565b61009e6100cb3660046104c2565b6103bd565b60008082116100de57600080fd5b6001546100eb90836105a6565b6002546040516370a0823160e01b81529193506001600160a01b0316906370a082319061011c903090600401610544565b60206040518083038186803b15801561013457600080fd5b505afa158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c919061052c565b82111561017857600080fd5b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906101aa9086908690600401610558565b602060405180830381600087803b1580156101c457600080fd5b505af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc919061050c565b50604051829033907f02405878159593cb3e0979693d52f3454344017c044f661134cb8563fe1783e190600090a350919050565b336102396103ae565b6001600160a01b0316146102685760405162461bcd60e51b815260040161025f90610571565b60405180910390fd5b6002546001600160a01b031663a9059cbb6102816103ae565b6002546040516370a0823160e01b81526001600160a01b03909116906370a08231906102b1903090600401610544565b60206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610301919061052c565b6040518363ffffffff1660e01b815260040161031e929190610558565b602060405180830381600087803b15801561033857600080fd5b505af115801561034c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610370919061050c565b50565b3361037c6103ae565b6001600160a01b0316146103a25760405162461bcd60e51b815260040161025f90610571565b6103ac6000610456565b565b6000546001600160a01b031690565b336103c66103ae565b6001600160a01b0316146103ec5760405162461bcd60e51b815260040161025f90610571565b6001600160a01b0381166104515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025f565b610370815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104bd57600080fd5b919050565b6000602082840312156104d3578081fd5b6104dc826104a6565b9392505050565b600080604083850312156104f5578081fd5b6104fe836104a6565b946020939093013593505050565b60006020828403121561051d578081fd5b815180151581146104dc578182fd5b60006020828403121561053d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156105cc57634e487b7160e01b81526011600452602481fd5b50029056fea26469706673582212208d37d4ab0cda8717204a97aa3d47b58823d8ac0f66d68dd5acdf2690adfff65e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/ZooFaucet.sol:ZooFaucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7940,
        "contract": "src/ZooFaucet.sol:ZooFaucet",
        "label": "rate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7943,
        "contract": "src/ZooFaucet.sol:ZooFaucet",
        "label": "token",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)767"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)767": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}