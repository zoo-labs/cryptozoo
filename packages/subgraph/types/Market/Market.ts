// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AskCreated extends ethereum.Event {
  get params(): AskCreated__Params {
    return new AskCreated__Params(this);
  }
}

export class AskCreated__Params {
  _event: AskCreated;

  constructor(event: AskCreated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ask(): AskCreatedAskStruct {
    return this._event.parameters[1].value.toTuple() as AskCreatedAskStruct;
  }
}

export class AskCreatedAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class AskRemoved extends ethereum.Event {
  get params(): AskRemoved__Params {
    return new AskRemoved__Params(this);
  }
}

export class AskRemoved__Params {
  _event: AskRemoved;

  constructor(event: AskRemoved) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ask(): AskRemovedAskStruct {
    return this._event.parameters[1].value.toTuple() as AskRemovedAskStruct;
  }
}

export class AskRemovedAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class BidCreated extends ethereum.Event {
  get params(): BidCreated__Params {
    return new BidCreated__Params(this);
  }
}

export class BidCreated__Params {
  _event: BidCreated;

  constructor(event: BidCreated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bid(): BidCreatedBidStruct {
    return this._event.parameters[1].value.toTuple() as BidCreatedBidStruct;
  }
}

export class BidCreatedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): BidCreatedBidSellOnShareStruct {
    return this[4].toTuple() as BidCreatedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class BidCreatedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class BidFinalized extends ethereum.Event {
  get params(): BidFinalized__Params {
    return new BidFinalized__Params(this);
  }
}

export class BidFinalized__Params {
  _event: BidFinalized;

  constructor(event: BidFinalized) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bid(): BidFinalizedBidStruct {
    return this._event.parameters[1].value.toTuple() as BidFinalizedBidStruct;
  }
}

export class BidFinalizedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): BidFinalizedBidSellOnShareStruct {
    return this[4].toTuple() as BidFinalizedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class BidFinalizedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class BidRemoved extends ethereum.Event {
  get params(): BidRemoved__Params {
    return new BidRemoved__Params(this);
  }
}

export class BidRemoved__Params {
  _event: BidRemoved;

  constructor(event: BidRemoved) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bid(): BidRemovedBidStruct {
    return this._event.parameters[1].value.toTuple() as BidRemovedBidStruct;
  }
}

export class BidRemovedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): BidRemovedBidSellOnShareStruct {
    return this[4].toTuple() as BidRemovedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class BidRemovedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class BidShareUpdated extends ethereum.Event {
  get params(): BidShareUpdated__Params {
    return new BidShareUpdated__Params(this);
  }
}

export class BidShareUpdated__Params {
  _event: BidShareUpdated;

  constructor(event: BidShareUpdated) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bidShares(): BidShareUpdatedBidSharesStruct {
    return this._event.parameters[1].value.toTuple() as BidShareUpdatedBidSharesStruct;
  }
}

export class BidShareUpdatedBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): BidShareUpdatedBidSharesPrevOwnerStruct {
    return this[0].toTuple() as BidShareUpdatedBidSharesPrevOwnerStruct;
  }

  get creator(): BidShareUpdatedBidSharesCreatorStruct {
    return this[1].toTuple() as BidShareUpdatedBidSharesCreatorStruct;
  }

  get owner(): BidShareUpdatedBidSharesOwnerStruct {
    return this[2].toTuple() as BidShareUpdatedBidSharesOwnerStruct;
  }
}

export class BidShareUpdatedBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class BidShareUpdatedBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class BidShareUpdatedBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class LazyBidCreated extends ethereum.Event {
  get params(): LazyBidCreated__Params {
    return new LazyBidCreated__Params(this);
  }
}

export class LazyBidCreated__Params {
  _event: LazyBidCreated;

  constructor(event: LazyBidCreated) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get bid(): LazyBidCreatedBidStruct {
    return this._event.parameters[2].value.toTuple() as LazyBidCreatedBidStruct;
  }
}

export class LazyBidCreatedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): LazyBidCreatedBidSellOnShareStruct {
    return this[4].toTuple() as LazyBidCreatedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class LazyBidCreatedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class LazyBidFinalized extends ethereum.Event {
  get params(): LazyBidFinalized__Params {
    return new LazyBidFinalized__Params(this);
  }
}

export class LazyBidFinalized__Params {
  _event: LazyBidFinalized;

  constructor(event: LazyBidFinalized) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bid(): LazyBidFinalizedBidStruct {
    return this._event.parameters[3].value.toTuple() as LazyBidFinalizedBidStruct;
  }
}

export class LazyBidFinalizedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): LazyBidFinalizedBidSellOnShareStruct {
    return this[4].toTuple() as LazyBidFinalizedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class LazyBidFinalizedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class LazyBidRemoved extends ethereum.Event {
  get params(): LazyBidRemoved__Params {
    return new LazyBidRemoved__Params(this);
  }
}

export class LazyBidRemoved__Params {
  _event: LazyBidRemoved;

  constructor(event: LazyBidRemoved) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get bid(): LazyBidRemovedBidStruct {
    return this._event.parameters[2].value.toTuple() as LazyBidRemovedBidStruct;
  }
}

export class LazyBidRemovedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): LazyBidRemovedBidSellOnShareStruct {
    return this[4].toTuple() as LazyBidRemovedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class LazyBidRemovedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Market__bidForTokenBidderResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): Market__bidForTokenBidderResultValue0SellOnShareStruct {
    return this[4].toTuple() as Market__bidForTokenBidderResultValue0SellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class Market__bidForTokenBidderResultValue0SellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__bidSharesForTokenResultValue0Struct extends ethereum.Tuple {
  get prevOwner(): Market__bidSharesForTokenResultValue0PrevOwnerStruct {
    return this[0].toTuple() as Market__bidSharesForTokenResultValue0PrevOwnerStruct;
  }

  get creator(): Market__bidSharesForTokenResultValue0CreatorStruct {
    return this[1].toTuple() as Market__bidSharesForTokenResultValue0CreatorStruct;
  }

  get owner(): Market__bidSharesForTokenResultValue0OwnerStruct {
    return this[2].toTuple() as Market__bidSharesForTokenResultValue0OwnerStruct;
  }
}

export class Market__bidSharesForTokenResultValue0PrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__bidSharesForTokenResultValue0CreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__bidSharesForTokenResultValue0OwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__currentAskForTokenResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Market__isValidBidSharesInputBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Market__isValidBidSharesInputBidSharesPrevOwnerStruct {
    return this[0].toTuple() as Market__isValidBidSharesInputBidSharesPrevOwnerStruct;
  }

  get creator(): Market__isValidBidSharesInputBidSharesCreatorStruct {
    return this[1].toTuple() as Market__isValidBidSharesInputBidSharesCreatorStruct;
  }

  get owner(): Market__isValidBidSharesInputBidSharesOwnerStruct {
    return this[2].toTuple() as Market__isValidBidSharesInputBidSharesOwnerStruct;
  }
}

export class Market__isValidBidSharesInputBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__isValidBidSharesInputBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__isValidBidSharesInputBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__isValidLazyBidInputEggStruct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get supply(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get birthday(): BigInt {
    return this[5].toBigInt();
  }

  get minted(): BigInt {
    return this[6].toBigInt();
  }

  get data(): Market__isValidLazyBidInputEggDataStruct {
    return this[7].toTuple() as Market__isValidLazyBidInputEggDataStruct;
  }

  get bidShares(): Market__isValidLazyBidInputEggBidSharesStruct {
    return this[8].toTuple() as Market__isValidLazyBidInputEggBidSharesStruct;
  }
}

export class Market__isValidLazyBidInputEggDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class Market__isValidLazyBidInputEggBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Market__isValidLazyBidInputEggBidSharesPrevOwnerStruct {
    return this[0].toTuple() as Market__isValidLazyBidInputEggBidSharesPrevOwnerStruct;
  }

  get creator(): Market__isValidLazyBidInputEggBidSharesCreatorStruct {
    return this[1].toTuple() as Market__isValidLazyBidInputEggBidSharesCreatorStruct;
  }

  get owner(): Market__isValidLazyBidInputEggBidSharesOwnerStruct {
    return this[2].toTuple() as Market__isValidLazyBidInputEggBidSharesOwnerStruct;
  }
}

export class Market__isValidLazyBidInputEggBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__isValidLazyBidInputEggBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__isValidLazyBidInputEggBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__lazyBidForTokenBidderResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): Market__lazyBidForTokenBidderResultValue0SellOnShareStruct {
    return this[4].toTuple() as Market__lazyBidForTokenBidderResultValue0SellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class Market__lazyBidForTokenBidderResultValue0SellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market__splitShareInputSharePercentageStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Market extends ethereum.SmartContract {
  static bind(address: Address): Market {
    return new Market("Market", address);
  }

  bidForTokenBidder(
    tokenId: BigInt,
    bidder: Address
  ): Market__bidForTokenBidderResultValue0Struct {
    let result = super.call(
      "bidForTokenBidder",
      "bidForTokenBidder(uint256,address):((uint256,address,address,address,(uint256),bool))",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(bidder)
      ]
    );

    return result[0].toTuple() as Market__bidForTokenBidderResultValue0Struct;
  }

  try_bidForTokenBidder(
    tokenId: BigInt,
    bidder: Address
  ): ethereum.CallResult<Market__bidForTokenBidderResultValue0Struct> {
    let result = super.tryCall(
      "bidForTokenBidder",
      "bidForTokenBidder(uint256,address):((uint256,address,address,address,(uint256),bool))",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(bidder)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Market__bidForTokenBidderResultValue0Struct
    );
  }

  bidSharesForToken(
    tokenId: BigInt
  ): Market__bidSharesForTokenResultValue0Struct {
    let result = super.call(
      "bidSharesForToken",
      "bidSharesForToken(uint256):(((uint256),(uint256),(uint256)))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toTuple() as Market__bidSharesForTokenResultValue0Struct;
  }

  try_bidSharesForToken(
    tokenId: BigInt
  ): ethereum.CallResult<Market__bidSharesForTokenResultValue0Struct> {
    let result = super.tryCall(
      "bidSharesForToken",
      "bidSharesForToken(uint256):(((uint256),(uint256),(uint256)))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Market__bidSharesForTokenResultValue0Struct
    );
  }

  currentAskForToken(
    tokenId: BigInt
  ): Market__currentAskForTokenResultValue0Struct {
    let result = super.call(
      "currentAskForToken",
      "currentAskForToken(uint256):((uint256,address,bool))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toTuple() as Market__currentAskForTokenResultValue0Struct;
  }

  try_currentAskForToken(
    tokenId: BigInt
  ): ethereum.CallResult<Market__currentAskForTokenResultValue0Struct> {
    let result = super.tryCall(
      "currentAskForToken",
      "currentAskForToken(uint256):((uint256,address,bool))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Market__currentAskForTokenResultValue0Struct
    );
  }

  isOfflineBidder(bidder: Address): boolean {
    let result = super.call(
      "isOfflineBidder",
      "isOfflineBidder(address):(bool)",
      [ethereum.Value.fromAddress(bidder)]
    );

    return result[0].toBoolean();
  }

  try_isOfflineBidder(bidder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOfflineBidder",
      "isOfflineBidder(address):(bool)",
      [ethereum.Value.fromAddress(bidder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidBid(tokenId: BigInt, bidAmount: BigInt): boolean {
    let result = super.call(
      "isValidBid",
      "isValidBid(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(bidAmount)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidBid(
    tokenId: BigInt,
    bidAmount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidBid",
      "isValidBid(uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(bidAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidBidShares(
    bidShares: Market__isValidBidSharesInputBidSharesStruct
  ): boolean {
    let result = super.call(
      "isValidBidShares",
      "isValidBidShares(((uint256),(uint256),(uint256))):(bool)",
      [ethereum.Value.fromTuple(bidShares)]
    );

    return result[0].toBoolean();
  }

  try_isValidBidShares(
    bidShares: Market__isValidBidSharesInputBidSharesStruct
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidBidShares",
      "isValidBidShares(((uint256),(uint256),(uint256))):(bool)",
      [ethereum.Value.fromTuple(bidShares)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidLazyBid(
    egg: Market__isValidLazyBidInputEggStruct,
    bidAmount: BigInt
  ): boolean {
    let result = super.call(
      "isValidLazyBid",
      "isValidLazyBid((uint8,string,uint256,uint256,uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256))),uint256):(bool)",
      [
        ethereum.Value.fromTuple(egg),
        ethereum.Value.fromUnsignedBigInt(bidAmount)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidLazyBid(
    egg: Market__isValidLazyBidInputEggStruct,
    bidAmount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidLazyBid",
      "isValidLazyBid((uint8,string,uint256,uint256,uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256))),uint256):(bool)",
      [
        ethereum.Value.fromTuple(egg),
        ethereum.Value.fromUnsignedBigInt(bidAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lazyBidForTokenBidder(
    dropId: BigInt,
    name: string,
    bidder: Address
  ): Market__lazyBidForTokenBidderResultValue0Struct {
    let result = super.call(
      "lazyBidForTokenBidder",
      "lazyBidForTokenBidder(uint256,string,address):((uint256,address,address,address,(uint256),bool))",
      [
        ethereum.Value.fromUnsignedBigInt(dropId),
        ethereum.Value.fromString(name),
        ethereum.Value.fromAddress(bidder)
      ]
    );

    return result[0].toTuple() as Market__lazyBidForTokenBidderResultValue0Struct;
  }

  try_lazyBidForTokenBidder(
    dropId: BigInt,
    name: string,
    bidder: Address
  ): ethereum.CallResult<Market__lazyBidForTokenBidderResultValue0Struct> {
    let result = super.tryCall(
      "lazyBidForTokenBidder",
      "lazyBidForTokenBidder(uint256,string,address):((uint256,address,address,address,(uint256),bool))",
      [
        ethereum.Value.fromUnsignedBigInt(dropId),
        ethereum.Value.fromString(name),
        ethereum.Value.fromAddress(bidder)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Market__lazyBidForTokenBidderResultValue0Struct
    );
  }

  mediaContract(): Address {
    let result = super.call("mediaContract", "mediaContract():(address)", []);

    return result[0].toAddress();
  }

  try_mediaContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mediaContract",
      "mediaContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  splitShare(
    sharePercentage: Market__splitShareInputSharePercentageStruct,
    amount: BigInt
  ): BigInt {
    let result = super.call(
      "splitShare",
      "splitShare((uint256),uint256):(uint256)",
      [
        ethereum.Value.fromTuple(sharePercentage),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_splitShare(
    sharePercentage: Market__splitShareInputSharePercentageStruct,
    amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "splitShare",
      "splitShare((uint256),uint256):(uint256)",
      [
        ethereum.Value.fromTuple(sharePercentage),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AcceptBidCall extends ethereum.Call {
  get inputs(): AcceptBidCall__Inputs {
    return new AcceptBidCall__Inputs(this);
  }

  get outputs(): AcceptBidCall__Outputs {
    return new AcceptBidCall__Outputs(this);
  }
}

export class AcceptBidCall__Inputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expectedBid(): AcceptBidCallExpectedBidStruct {
    return this._call.inputValues[1].value.toTuple() as AcceptBidCallExpectedBidStruct;
  }
}

export class AcceptBidCall__Outputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }
}

export class AcceptBidCallExpectedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): AcceptBidCallExpectedBidSellOnShareStruct {
    return this[4].toTuple() as AcceptBidCallExpectedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class AcceptBidCallExpectedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCall extends ethereum.Call {
  get inputs(): AcceptLazyBidFromAppCall__Inputs {
    return new AcceptLazyBidFromAppCall__Inputs(this);
  }

  get outputs(): AcceptLazyBidFromAppCall__Outputs {
    return new AcceptLazyBidFromAppCall__Outputs(this);
  }
}

export class AcceptLazyBidFromAppCall__Inputs {
  _call: AcceptLazyBidFromAppCall;

  constructor(call: AcceptLazyBidFromAppCall) {
    this._call = call;
  }

  get dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get egg(): AcceptLazyBidFromAppCallEggStruct {
    return this._call.inputValues[1].value.toTuple() as AcceptLazyBidFromAppCallEggStruct;
  }

  get token(): AcceptLazyBidFromAppCallTokenStruct {
    return this._call.inputValues[2].value.toTuple() as AcceptLazyBidFromAppCallTokenStruct;
  }

  get expectedBid(): AcceptLazyBidFromAppCallExpectedBidStruct {
    return this._call.inputValues[3].value.toTuple() as AcceptLazyBidFromAppCallExpectedBidStruct;
  }
}

export class AcceptLazyBidFromAppCall__Outputs {
  _call: AcceptLazyBidFromAppCall;

  constructor(call: AcceptLazyBidFromAppCall) {
    this._call = call;
  }
}

export class AcceptLazyBidFromAppCallEggStruct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get supply(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get birthday(): BigInt {
    return this[5].toBigInt();
  }

  get minted(): BigInt {
    return this[6].toBigInt();
  }

  get data(): AcceptLazyBidFromAppCallEggDataStruct {
    return this[7].toTuple() as AcceptLazyBidFromAppCallEggDataStruct;
  }

  get bidShares(): AcceptLazyBidFromAppCallEggBidSharesStruct {
    return this[8].toTuple() as AcceptLazyBidFromAppCallEggBidSharesStruct;
  }
}

export class AcceptLazyBidFromAppCallEggDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class AcceptLazyBidFromAppCallEggBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): AcceptLazyBidFromAppCallEggBidSharesPrevOwnerStruct {
    return this[0].toTuple() as AcceptLazyBidFromAppCallEggBidSharesPrevOwnerStruct;
  }

  get creator(): AcceptLazyBidFromAppCallEggBidSharesCreatorStruct {
    return this[1].toTuple() as AcceptLazyBidFromAppCallEggBidSharesCreatorStruct;
  }

  get owner(): AcceptLazyBidFromAppCallEggBidSharesOwnerStruct {
    return this[2].toTuple() as AcceptLazyBidFromAppCallEggBidSharesOwnerStruct;
  }
}

export class AcceptLazyBidFromAppCallEggBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallEggBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallEggBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallTokenStruct extends ethereum.Tuple {
  get rarity(): AcceptLazyBidFromAppCallTokenRarityStruct {
    return this[0].toTuple() as AcceptLazyBidFromAppCallTokenRarityStruct;
  }

  get kind(): i32 {
    return this[1].toI32();
  }

  get name(): string {
    return this[2].toString();
  }

  get id(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get birthday(): BigInt {
    return this[5].toBigInt();
  }

  get customName(): string {
    return this[6].toString();
  }

  get parents(): AcceptLazyBidFromAppCallTokenParentsStruct {
    return this[7].toTuple() as AcceptLazyBidFromAppCallTokenParentsStruct;
  }

  get breed(): AcceptLazyBidFromAppCallTokenBreedStruct {
    return this[8].toTuple() as AcceptLazyBidFromAppCallTokenBreedStruct;
  }

  get meta(): AcceptLazyBidFromAppCallTokenMetaStruct {
    return this[9].toTuple() as AcceptLazyBidFromAppCallTokenMetaStruct;
  }

  get data(): AcceptLazyBidFromAppCallTokenDataStruct {
    return this[10].toTuple() as AcceptLazyBidFromAppCallTokenDataStruct;
  }

  get bidShares(): AcceptLazyBidFromAppCallTokenBidSharesStruct {
    return this[11].toTuple() as AcceptLazyBidFromAppCallTokenBidSharesStruct;
  }
}

export class AcceptLazyBidFromAppCallTokenRarityStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get probability(): BigInt {
    return this[1].toBigInt();
  }

  get yields(): BigInt {
    return this[2].toBigInt();
  }

  get boost(): BigInt {
    return this[3].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallTokenParentsStruct extends ethereum.Tuple {
  get animalA(): string {
    return this[0].toString();
  }

  get animalB(): string {
    return this[1].toString();
  }

  get tokenA(): BigInt {
    return this[2].toBigInt();
  }

  get tokenB(): BigInt {
    return this[3].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallTokenBreedStruct extends ethereum.Tuple {
  get count(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallTokenMetaStruct extends ethereum.Tuple {
  get eggID(): BigInt {
    return this[0].toBigInt();
  }

  get dropID(): BigInt {
    return this[1].toBigInt();
  }

  get burned(): boolean {
    return this[2].toBoolean();
  }

  get swapped(): boolean {
    return this[3].toBoolean();
  }
}

export class AcceptLazyBidFromAppCallTokenDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class AcceptLazyBidFromAppCallTokenBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): AcceptLazyBidFromAppCallTokenBidSharesPrevOwnerStruct {
    return this[0].toTuple() as AcceptLazyBidFromAppCallTokenBidSharesPrevOwnerStruct;
  }

  get creator(): AcceptLazyBidFromAppCallTokenBidSharesCreatorStruct {
    return this[1].toTuple() as AcceptLazyBidFromAppCallTokenBidSharesCreatorStruct;
  }

  get owner(): AcceptLazyBidFromAppCallTokenBidSharesOwnerStruct {
    return this[2].toTuple() as AcceptLazyBidFromAppCallTokenBidSharesOwnerStruct;
  }
}

export class AcceptLazyBidFromAppCallTokenBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallTokenBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallTokenBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class AcceptLazyBidFromAppCallExpectedBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): AcceptLazyBidFromAppCallExpectedBidSellOnShareStruct {
    return this[4].toTuple() as AcceptLazyBidFromAppCallExpectedBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class AcceptLazyBidFromAppCallExpectedBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class ConfigureCall extends ethereum.Call {
  get inputs(): ConfigureCall__Inputs {
    return new ConfigureCall__Inputs(this);
  }

  get outputs(): ConfigureCall__Outputs {
    return new ConfigureCall__Outputs(this);
  }
}

export class ConfigureCall__Inputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }

  get mediaContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConfigureCall__Outputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }
}

export class RemoveAskCall extends ethereum.Call {
  get inputs(): RemoveAskCall__Inputs {
    return new RemoveAskCall__Inputs(this);
  }

  get outputs(): RemoveAskCall__Outputs {
    return new RemoveAskCall__Outputs(this);
  }
}

export class RemoveAskCall__Inputs {
  _call: RemoveAskCall;

  constructor(call: RemoveAskCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveAskCall__Outputs {
  _call: RemoveAskCall;

  constructor(call: RemoveAskCall) {
    this._call = call;
  }
}

export class RemoveBidCall extends ethereum.Call {
  get inputs(): RemoveBidCall__Inputs {
    return new RemoveBidCall__Inputs(this);
  }

  get outputs(): RemoveBidCall__Outputs {
    return new RemoveBidCall__Outputs(this);
  }
}

export class RemoveBidCall__Inputs {
  _call: RemoveBidCall;

  constructor(call: RemoveBidCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bidder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveBidCall__Outputs {
  _call: RemoveBidCall;

  constructor(call: RemoveBidCall) {
    this._call = call;
  }
}

export class RemoveLazyBidFromAppCall extends ethereum.Call {
  get inputs(): RemoveLazyBidFromAppCall__Inputs {
    return new RemoveLazyBidFromAppCall__Inputs(this);
  }

  get outputs(): RemoveLazyBidFromAppCall__Outputs {
    return new RemoveLazyBidFromAppCall__Outputs(this);
  }
}

export class RemoveLazyBidFromAppCall__Inputs {
  _call: RemoveLazyBidFromAppCall;

  constructor(call: RemoveLazyBidFromAppCall) {
    this._call = call;
  }

  get dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get bidder(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RemoveLazyBidFromAppCall__Outputs {
  _call: RemoveLazyBidFromAppCall;

  constructor(call: RemoveLazyBidFromAppCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAskCall extends ethereum.Call {
  get inputs(): SetAskCall__Inputs {
    return new SetAskCall__Inputs(this);
  }

  get outputs(): SetAskCall__Outputs {
    return new SetAskCall__Outputs(this);
  }
}

export class SetAskCall__Inputs {
  _call: SetAskCall;

  constructor(call: SetAskCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ask(): SetAskCallAskStruct {
    return this._call.inputValues[1].value.toTuple() as SetAskCallAskStruct;
  }
}

export class SetAskCall__Outputs {
  _call: SetAskCall;

  constructor(call: SetAskCall) {
    this._call = call;
  }
}

export class SetAskCallAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class SetBidCall extends ethereum.Call {
  get inputs(): SetBidCall__Inputs {
    return new SetBidCall__Inputs(this);
  }

  get outputs(): SetBidCall__Outputs {
    return new SetBidCall__Outputs(this);
  }
}

export class SetBidCall__Inputs {
  _call: SetBidCall;

  constructor(call: SetBidCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bid(): SetBidCallBidStruct {
    return this._call.inputValues[1].value.toTuple() as SetBidCallBidStruct;
  }

  get spender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetBidCall__Outputs {
  _call: SetBidCall;

  constructor(call: SetBidCall) {
    this._call = call;
  }
}

export class SetBidCallBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): SetBidCallBidSellOnShareStruct {
    return this[4].toTuple() as SetBidCallBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class SetBidCallBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetBidSharesCall extends ethereum.Call {
  get inputs(): SetBidSharesCall__Inputs {
    return new SetBidSharesCall__Inputs(this);
  }

  get outputs(): SetBidSharesCall__Outputs {
    return new SetBidSharesCall__Outputs(this);
  }
}

export class SetBidSharesCall__Inputs {
  _call: SetBidSharesCall;

  constructor(call: SetBidSharesCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bidShares(): SetBidSharesCallBidSharesStruct {
    return this._call.inputValues[1].value.toTuple() as SetBidSharesCallBidSharesStruct;
  }
}

export class SetBidSharesCall__Outputs {
  _call: SetBidSharesCall;

  constructor(call: SetBidSharesCall) {
    this._call = call;
  }
}

export class SetBidSharesCallBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): SetBidSharesCallBidSharesPrevOwnerStruct {
    return this[0].toTuple() as SetBidSharesCallBidSharesPrevOwnerStruct;
  }

  get creator(): SetBidSharesCallBidSharesCreatorStruct {
    return this[1].toTuple() as SetBidSharesCallBidSharesCreatorStruct;
  }

  get owner(): SetBidSharesCallBidSharesOwnerStruct {
    return this[2].toTuple() as SetBidSharesCallBidSharesOwnerStruct;
  }
}

export class SetBidSharesCallBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetBidSharesCallBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetBidSharesCallBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetLazyBidFromAppCall extends ethereum.Call {
  get inputs(): SetLazyBidFromAppCall__Inputs {
    return new SetLazyBidFromAppCall__Inputs(this);
  }

  get outputs(): SetLazyBidFromAppCall__Outputs {
    return new SetLazyBidFromAppCall__Outputs(this);
  }
}

export class SetLazyBidFromAppCall__Inputs {
  _call: SetLazyBidFromAppCall;

  constructor(call: SetLazyBidFromAppCall) {
    this._call = call;
  }

  get dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get egg(): SetLazyBidFromAppCallEggStruct {
    return this._call.inputValues[1].value.toTuple() as SetLazyBidFromAppCallEggStruct;
  }

  get bid(): SetLazyBidFromAppCallBidStruct {
    return this._call.inputValues[2].value.toTuple() as SetLazyBidFromAppCallBidStruct;
  }

  get spender(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class SetLazyBidFromAppCall__Outputs {
  _call: SetLazyBidFromAppCall;

  constructor(call: SetLazyBidFromAppCall) {
    this._call = call;
  }
}

export class SetLazyBidFromAppCallEggStruct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get supply(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get birthday(): BigInt {
    return this[5].toBigInt();
  }

  get minted(): BigInt {
    return this[6].toBigInt();
  }

  get data(): SetLazyBidFromAppCallEggDataStruct {
    return this[7].toTuple() as SetLazyBidFromAppCallEggDataStruct;
  }

  get bidShares(): SetLazyBidFromAppCallEggBidSharesStruct {
    return this[8].toTuple() as SetLazyBidFromAppCallEggBidSharesStruct;
  }
}

export class SetLazyBidFromAppCallEggDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class SetLazyBidFromAppCallEggBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): SetLazyBidFromAppCallEggBidSharesPrevOwnerStruct {
    return this[0].toTuple() as SetLazyBidFromAppCallEggBidSharesPrevOwnerStruct;
  }

  get creator(): SetLazyBidFromAppCallEggBidSharesCreatorStruct {
    return this[1].toTuple() as SetLazyBidFromAppCallEggBidSharesCreatorStruct;
  }

  get owner(): SetLazyBidFromAppCallEggBidSharesOwnerStruct {
    return this[2].toTuple() as SetLazyBidFromAppCallEggBidSharesOwnerStruct;
  }
}

export class SetLazyBidFromAppCallEggBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetLazyBidFromAppCallEggBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetLazyBidFromAppCallEggBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetLazyBidFromAppCallBidStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get bidder(): Address {
    return this[2].toAddress();
  }

  get recipient(): Address {
    return this[3].toAddress();
  }

  get sellOnShare(): SetLazyBidFromAppCallBidSellOnShareStruct {
    return this[4].toTuple() as SetLazyBidFromAppCallBidSellOnShareStruct;
  }

  get offline(): boolean {
    return this[5].toBoolean();
  }
}

export class SetLazyBidFromAppCallBidSellOnShareStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetOfflineBidderCall extends ethereum.Call {
  get inputs(): SetOfflineBidderCall__Inputs {
    return new SetOfflineBidderCall__Inputs(this);
  }

  get outputs(): SetOfflineBidderCall__Outputs {
    return new SetOfflineBidderCall__Outputs(this);
  }
}

export class SetOfflineBidderCall__Inputs {
  _call: SetOfflineBidderCall;

  constructor(call: SetOfflineBidderCall) {
    this._call = call;
  }

  get bidder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get authorized(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOfflineBidderCall__Outputs {
  _call: SetOfflineBidderCall;

  constructor(call: SetOfflineBidderCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
