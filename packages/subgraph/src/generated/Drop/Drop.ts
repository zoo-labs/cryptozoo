// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenTypeAdded extends ethereum.Event {
  get params(): TokenTypeAdded__Params {
    return new TokenTypeAdded__Params(this);
  }
}

export class TokenTypeAdded__Params {
  _event: TokenTypeAdded;

  constructor(event: TokenTypeAdded) {
    this._event = event;
  }

  get tokenType(): TokenTypeAddedTokenTypeStruct {
    return changetype<TokenTypeAddedTokenTypeStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class TokenTypeAddedTokenTypeStruct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get ask(): TokenTypeAddedTokenTypeAskStruct {
    return changetype<TokenTypeAddedTokenTypeAskStruct>(this[2].toTuple());
  }

  get supply(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get minted(): BigInt {
    return this[5].toBigInt();
  }

  get data(): TokenTypeAddedTokenTypeDataStruct {
    return changetype<TokenTypeAddedTokenTypeDataStruct>(this[6].toTuple());
  }

  get bidShares(): TokenTypeAddedTokenTypeBidSharesStruct {
    return changetype<TokenTypeAddedTokenTypeBidSharesStruct>(
      this[7].toTuple()
    );
  }
}

export class TokenTypeAddedTokenTypeAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class TokenTypeAddedTokenTypeDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class TokenTypeAddedTokenTypeBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): TokenTypeAddedTokenTypeBidSharesPrevOwnerStruct {
    return changetype<TokenTypeAddedTokenTypeBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): TokenTypeAddedTokenTypeBidSharesCreatorStruct {
    return changetype<TokenTypeAddedTokenTypeBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): TokenTypeAddedTokenTypeBidSharesOwnerStruct {
    return changetype<TokenTypeAddedTokenTypeBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class TokenTypeAddedTokenTypeBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class TokenTypeAddedTokenTypeBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class TokenTypeAddedTokenTypeBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class TokenTypeAskUpdated extends ethereum.Event {
  get params(): TokenTypeAskUpdated__Params {
    return new TokenTypeAskUpdated__Params(this);
  }
}

export class TokenTypeAskUpdated__Params {
  _event: TokenTypeAskUpdated;

  constructor(event: TokenTypeAskUpdated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get ask(): TokenTypeAskUpdatedAskStruct {
    return changetype<TokenTypeAskUpdatedAskStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class TokenTypeAskUpdatedAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class TokenTypeBidSharesUpdated extends ethereum.Event {
  get params(): TokenTypeBidSharesUpdated__Params {
    return new TokenTypeBidSharesUpdated__Params(this);
  }
}

export class TokenTypeBidSharesUpdated__Params {
  _event: TokenTypeBidSharesUpdated;

  constructor(event: TokenTypeBidSharesUpdated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get bidShares(): TokenTypeBidSharesUpdatedBidSharesStruct {
    return changetype<TokenTypeBidSharesUpdatedBidSharesStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class TokenTypeBidSharesUpdatedBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): TokenTypeBidSharesUpdatedBidSharesPrevOwnerStruct {
    return changetype<TokenTypeBidSharesUpdatedBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): TokenTypeBidSharesUpdatedBidSharesCreatorStruct {
    return changetype<TokenTypeBidSharesUpdatedBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): TokenTypeBidSharesUpdatedBidSharesOwnerStruct {
    return changetype<TokenTypeBidSharesUpdatedBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class TokenTypeBidSharesUpdatedBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class TokenTypeBidSharesUpdatedBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class TokenTypeBidSharesUpdatedBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__getTokenTypeResultValue0Struct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get ask(): Drop__getTokenTypeResultValue0AskStruct {
    return changetype<Drop__getTokenTypeResultValue0AskStruct>(
      this[2].toTuple()
    );
  }

  get supply(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get minted(): BigInt {
    return this[5].toBigInt();
  }

  get data(): Drop__getTokenTypeResultValue0DataStruct {
    return changetype<Drop__getTokenTypeResultValue0DataStruct>(
      this[6].toTuple()
    );
  }

  get bidShares(): Drop__getTokenTypeResultValue0BidSharesStruct {
    return changetype<Drop__getTokenTypeResultValue0BidSharesStruct>(
      this[7].toTuple()
    );
  }
}

export class Drop__getTokenTypeResultValue0AskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__getTokenTypeResultValue0DataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class Drop__getTokenTypeResultValue0BidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Drop__getTokenTypeResultValue0BidSharesPrevOwnerStruct {
    return changetype<Drop__getTokenTypeResultValue0BidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): Drop__getTokenTypeResultValue0BidSharesCreatorStruct {
    return changetype<Drop__getTokenTypeResultValue0BidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): Drop__getTokenTypeResultValue0BidSharesOwnerStruct {
    return changetype<Drop__getTokenTypeResultValue0BidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class Drop__getTokenTypeResultValue0BidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__getTokenTypeResultValue0BidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__getTokenTypeResultValue0BidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__getTokenTypesResultValue0Struct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get ask(): Drop__getTokenTypesResultValue0AskStruct {
    return changetype<Drop__getTokenTypesResultValue0AskStruct>(
      this[2].toTuple()
    );
  }

  get supply(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get minted(): BigInt {
    return this[5].toBigInt();
  }

  get data(): Drop__getTokenTypesResultValue0DataStruct {
    return changetype<Drop__getTokenTypesResultValue0DataStruct>(
      this[6].toTuple()
    );
  }

  get bidShares(): Drop__getTokenTypesResultValue0BidSharesStruct {
    return changetype<Drop__getTokenTypesResultValue0BidSharesStruct>(
      this[7].toTuple()
    );
  }
}

export class Drop__getTokenTypesResultValue0AskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__getTokenTypesResultValue0DataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class Drop__getTokenTypesResultValue0BidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Drop__getTokenTypesResultValue0BidSharesPrevOwnerStruct {
    return changetype<Drop__getTokenTypesResultValue0BidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): Drop__getTokenTypesResultValue0BidSharesCreatorStruct {
    return changetype<Drop__getTokenTypesResultValue0BidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): Drop__getTokenTypesResultValue0BidSharesOwnerStruct {
    return changetype<Drop__getTokenTypesResultValue0BidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class Drop__getTokenTypesResultValue0BidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__getTokenTypesResultValue0BidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__getTokenTypesResultValue0BidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__isValidBidSharesInputBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Drop__isValidBidSharesInputBidSharesPrevOwnerStruct {
    return changetype<Drop__isValidBidSharesInputBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): Drop__isValidBidSharesInputBidSharesCreatorStruct {
    return changetype<Drop__isValidBidSharesInputBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): Drop__isValidBidSharesInputBidSharesOwnerStruct {
    return changetype<Drop__isValidBidSharesInputBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class Drop__isValidBidSharesInputBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__isValidBidSharesInputBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__isValidBidSharesInputBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__newNFTResultValue0Struct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get data(): Drop__newNFTResultValue0DataStruct {
    return changetype<Drop__newNFTResultValue0DataStruct>(this[4].toTuple());
  }

  get bidShares(): Drop__newNFTResultValue0BidSharesStruct {
    return changetype<Drop__newNFTResultValue0BidSharesStruct>(
      this[5].toTuple()
    );
  }

  get meta(): Drop__newNFTResultValue0MetaStruct {
    return changetype<Drop__newNFTResultValue0MetaStruct>(this[6].toTuple());
  }
}

export class Drop__newNFTResultValue0DataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class Drop__newNFTResultValue0BidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Drop__newNFTResultValue0BidSharesPrevOwnerStruct {
    return changetype<Drop__newNFTResultValue0BidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): Drop__newNFTResultValue0BidSharesCreatorStruct {
    return changetype<Drop__newNFTResultValue0BidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): Drop__newNFTResultValue0BidSharesOwnerStruct {
    return changetype<Drop__newNFTResultValue0BidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class Drop__newNFTResultValue0BidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__newNFTResultValue0BidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__newNFTResultValue0BidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__newNFTResultValue0MetaStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get dropId(): BigInt {
    return this[1].toBigInt();
  }

  get burned(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__setTokenTypeResultValue0Struct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get ask(): Drop__setTokenTypeResultValue0AskStruct {
    return changetype<Drop__setTokenTypeResultValue0AskStruct>(
      this[2].toTuple()
    );
  }

  get supply(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get minted(): BigInt {
    return this[5].toBigInt();
  }

  get data(): Drop__setTokenTypeResultValue0DataStruct {
    return changetype<Drop__setTokenTypeResultValue0DataStruct>(
      this[6].toTuple()
    );
  }

  get bidShares(): Drop__setTokenTypeResultValue0BidSharesStruct {
    return changetype<Drop__setTokenTypeResultValue0BidSharesStruct>(
      this[7].toTuple()
    );
  }
}

export class Drop__setTokenTypeResultValue0AskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__setTokenTypeResultValue0DataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class Drop__setTokenTypeResultValue0BidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Drop__setTokenTypeResultValue0BidSharesPrevOwnerStruct {
    return changetype<Drop__setTokenTypeResultValue0BidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): Drop__setTokenTypeResultValue0BidSharesCreatorStruct {
    return changetype<Drop__setTokenTypeResultValue0BidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): Drop__setTokenTypeResultValue0BidSharesOwnerStruct {
    return changetype<Drop__setTokenTypeResultValue0BidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class Drop__setTokenTypeResultValue0BidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__setTokenTypeResultValue0BidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__setTokenTypeResultValue0BidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__setTokenTypeInputAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__tokenTypeAskResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__tokenTypesResultAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class Drop__tokenTypesResultDataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class Drop__tokenTypesResultBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): Drop__tokenTypesResultBidSharesPrevOwnerStruct {
    return changetype<Drop__tokenTypesResultBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): Drop__tokenTypesResultBidSharesCreatorStruct {
    return changetype<Drop__tokenTypesResultBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): Drop__tokenTypesResultBidSharesOwnerStruct {
    return changetype<Drop__tokenTypesResultBidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class Drop__tokenTypesResultBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__tokenTypesResultBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__tokenTypesResultBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class Drop__tokenTypesResult {
  value0: i32;
  value1: string;
  value2: Drop__tokenTypesResultAskStruct;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: Drop__tokenTypesResultDataStruct;
  value7: Drop__tokenTypesResultBidSharesStruct;

  constructor(
    value0: i32,
    value1: string,
    value2: Drop__tokenTypesResultAskStruct,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: Drop__tokenTypesResultDataStruct,
    value7: Drop__tokenTypesResultBidSharesStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    return map;
  }
}

export class Drop extends ethereum.SmartContract {
  static bind(address: Address): Drop {
    return new Drop("Drop", address);
  }

  appAddress(): Address {
    let result = super.call("appAddress", "appAddress():(address)", []);

    return result[0].toAddress();
  }

  try_appAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("appAddress", "appAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTokenType(name: string): Drop__getTokenTypeResultValue0Struct {
    let result = super.call(
      "getTokenType",
      "getTokenType(string):((uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256))))",
      [ethereum.Value.fromString(name)]
    );

    return changetype<Drop__getTokenTypeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getTokenType(
    name: string
  ): ethereum.CallResult<Drop__getTokenTypeResultValue0Struct> {
    let result = super.tryCall(
      "getTokenType",
      "getTokenType(string):((uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256))))",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Drop__getTokenTypeResultValue0Struct>(value[0].toTuple())
    );
  }

  getTokenTypes(): Array<Drop__getTokenTypesResultValue0Struct> {
    let result = super.call(
      "getTokenTypes",
      "getTokenTypes():((uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256)))[])",
      []
    );

    return result[0].toTupleArray<Drop__getTokenTypesResultValue0Struct>();
  }

  try_getTokenTypes(): ethereum.CallResult<
    Array<Drop__getTokenTypesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getTokenTypes",
      "getTokenTypes():((uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256)))[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Drop__getTokenTypesResultValue0Struct>()
    );
  }

  isValidBidShares(
    bidShares: Drop__isValidBidSharesInputBidSharesStruct
  ): boolean {
    let result = super.call(
      "isValidBidShares",
      "isValidBidShares(((uint256),(uint256),(uint256))):(bool)",
      [ethereum.Value.fromTuple(bidShares)]
    );

    return result[0].toBoolean();
  }

  try_isValidBidShares(
    bidShares: Drop__isValidBidSharesInputBidSharesStruct
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidBidShares",
      "isValidBidShares(((uint256),(uint256),(uint256))):(bool)",
      [ethereum.Value.fromTuple(bidShares)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  newNFT(name: string): Drop__newNFTResultValue0Struct {
    let result = super.call(
      "newNFT",
      "newNFT(string):((uint8,string,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256)),(uint256,uint256,bool)))",
      [ethereum.Value.fromString(name)]
    );

    return changetype<Drop__newNFTResultValue0Struct>(result[0].toTuple());
  }

  try_newNFT(
    name: string
  ): ethereum.CallResult<Drop__newNFTResultValue0Struct> {
    let result = super.tryCall(
      "newNFT",
      "newNFT(string):((uint8,string,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256)),(uint256,uint256,bool)))",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Drop__newNFTResultValue0Struct>(value[0].toTuple())
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setTokenType(
    kind: i32,
    name: string,
    ask: Drop__setTokenTypeInputAskStruct,
    supply: BigInt,
    tokenURI: string,
    metadataURI: string
  ): Drop__setTokenTypeResultValue0Struct {
    let result = super.call(
      "setTokenType",
      "setTokenType(uint8,string,(uint256,address,bool),uint256,string,string):((uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256))))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(kind)),
        ethereum.Value.fromString(name),
        ethereum.Value.fromTuple(ask),
        ethereum.Value.fromUnsignedBigInt(supply),
        ethereum.Value.fromString(tokenURI),
        ethereum.Value.fromString(metadataURI)
      ]
    );

    return changetype<Drop__setTokenTypeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_setTokenType(
    kind: i32,
    name: string,
    ask: Drop__setTokenTypeInputAskStruct,
    supply: BigInt,
    tokenURI: string,
    metadataURI: string
  ): ethereum.CallResult<Drop__setTokenTypeResultValue0Struct> {
    let result = super.tryCall(
      "setTokenType",
      "setTokenType(uint8,string,(uint256,address,bool),uint256,string,string):((uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256))))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(kind)),
        ethereum.Value.fromString(name),
        ethereum.Value.fromTuple(ask),
        ethereum.Value.fromUnsignedBigInt(supply),
        ethereum.Value.fromString(tokenURI),
        ethereum.Value.fromString(metadataURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Drop__setTokenTypeResultValue0Struct>(value[0].toTuple())
    );
  }

  title(): string {
    let result = super.call("title", "title():(string)", []);

    return result[0].toString();
  }

  try_title(): ethereum.CallResult<string> {
    let result = super.tryCall("title", "title():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenNames(param0: BigInt): string {
    let result = super.call("tokenNames", "tokenNames(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_tokenNames(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenNames", "tokenNames(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenSupply(name: string): BigInt {
    let result = super.call("tokenSupply", "tokenSupply(string):(uint256)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toBigInt();
  }

  try_tokenSupply(name: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("tokenSupply", "tokenSupply(string):(uint256)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenTypeAsk(name: string): Drop__tokenTypeAskResultValue0Struct {
    let result = super.call(
      "tokenTypeAsk",
      "tokenTypeAsk(string):((uint256,address,bool))",
      [ethereum.Value.fromString(name)]
    );

    return changetype<Drop__tokenTypeAskResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_tokenTypeAsk(
    name: string
  ): ethereum.CallResult<Drop__tokenTypeAskResultValue0Struct> {
    let result = super.tryCall(
      "tokenTypeAsk",
      "tokenTypeAsk(string):((uint256,address,bool))",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Drop__tokenTypeAskResultValue0Struct>(value[0].toTuple())
    );
  }

  tokenTypes(param0: string): Drop__tokenTypesResult {
    let result = super.call(
      "tokenTypes",
      "tokenTypes(string):(uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256)))",
      [ethereum.Value.fromString(param0)]
    );

    return new Drop__tokenTypesResult(
      result[0].toI32(),
      result[1].toString(),
      changetype<Drop__tokenTypesResultAskStruct>(result[2].toTuple()),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      changetype<Drop__tokenTypesResultDataStruct>(result[6].toTuple()),
      changetype<Drop__tokenTypesResultBidSharesStruct>(result[7].toTuple())
    );
  }

  try_tokenTypes(param0: string): ethereum.CallResult<Drop__tokenTypesResult> {
    let result = super.tryCall(
      "tokenTypes",
      "tokenTypes(string):(uint8,string,(uint256,address,bool),uint256,uint256,uint256,(string,string,bytes32,bytes32),((uint256),(uint256),(uint256)))",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Drop__tokenTypesResult(
        value[0].toI32(),
        value[1].toString(),
        changetype<Drop__tokenTypesResultAskStruct>(value[2].toTuple()),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        changetype<Drop__tokenTypesResultDataStruct>(value[6].toTuple()),
        changetype<Drop__tokenTypesResultBidSharesStruct>(value[7].toTuple())
      )
    );
  }

  totalMinted(name: string): BigInt {
    let result = super.call("totalMinted", "totalMinted(string):(uint256)", [
      ethereum.Value.fromString(name)
    ]);

    return result[0].toBigInt();
  }

  try_totalMinted(name: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalMinted", "totalMinted(string):(uint256)", [
      ethereum.Value.fromString(name)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConfigureCall extends ethereum.Call {
  get inputs(): ConfigureCall__Inputs {
    return new ConfigureCall__Inputs(this);
  }

  get outputs(): ConfigureCall__Outputs {
    return new ConfigureCall__Outputs(this);
  }
}

export class ConfigureCall__Inputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }

  get _appAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConfigureCall__Outputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }
}

export class NewNFTCall extends ethereum.Call {
  get inputs(): NewNFTCall__Inputs {
    return new NewNFTCall__Inputs(this);
  }

  get outputs(): NewNFTCall__Outputs {
    return new NewNFTCall__Outputs(this);
  }
}

export class NewNFTCall__Inputs {
  _call: NewNFTCall;

  constructor(call: NewNFTCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class NewNFTCall__Outputs {
  _call: NewNFTCall;

  constructor(call: NewNFTCall) {
    this._call = call;
  }

  get value0(): NewNFTCallValue0Struct {
    return changetype<NewNFTCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class NewNFTCallValue0Struct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get data(): NewNFTCallValue0DataStruct {
    return changetype<NewNFTCallValue0DataStruct>(this[4].toTuple());
  }

  get bidShares(): NewNFTCallValue0BidSharesStruct {
    return changetype<NewNFTCallValue0BidSharesStruct>(this[5].toTuple());
  }

  get meta(): NewNFTCallValue0MetaStruct {
    return changetype<NewNFTCallValue0MetaStruct>(this[6].toTuple());
  }
}

export class NewNFTCallValue0DataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class NewNFTCallValue0BidSharesStruct extends ethereum.Tuple {
  get prevOwner(): NewNFTCallValue0BidSharesPrevOwnerStruct {
    return changetype<NewNFTCallValue0BidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): NewNFTCallValue0BidSharesCreatorStruct {
    return changetype<NewNFTCallValue0BidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): NewNFTCallValue0BidSharesOwnerStruct {
    return changetype<NewNFTCallValue0BidSharesOwnerStruct>(this[2].toTuple());
  }
}

export class NewNFTCallValue0BidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class NewNFTCallValue0BidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class NewNFTCallValue0BidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class NewNFTCallValue0MetaStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get dropId(): BigInt {
    return this[1].toBigInt();
  }

  get burned(): boolean {
    return this[2].toBoolean();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBidSharesCall extends ethereum.Call {
  get inputs(): SetBidSharesCall__Inputs {
    return new SetBidSharesCall__Inputs(this);
  }

  get outputs(): SetBidSharesCall__Outputs {
    return new SetBidSharesCall__Outputs(this);
  }
}

export class SetBidSharesCall__Inputs {
  _call: SetBidSharesCall;

  constructor(call: SetBidSharesCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get bidShares(): SetBidSharesCallBidSharesStruct {
    return changetype<SetBidSharesCallBidSharesStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetBidSharesCall__Outputs {
  _call: SetBidSharesCall;

  constructor(call: SetBidSharesCall) {
    this._call = call;
  }
}

export class SetBidSharesCallBidSharesStruct extends ethereum.Tuple {
  get prevOwner(): SetBidSharesCallBidSharesPrevOwnerStruct {
    return changetype<SetBidSharesCallBidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): SetBidSharesCallBidSharesCreatorStruct {
    return changetype<SetBidSharesCallBidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): SetBidSharesCallBidSharesOwnerStruct {
    return changetype<SetBidSharesCallBidSharesOwnerStruct>(this[2].toTuple());
  }
}

export class SetBidSharesCallBidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetBidSharesCallBidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetBidSharesCallBidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetTokenTypeCall extends ethereum.Call {
  get inputs(): SetTokenTypeCall__Inputs {
    return new SetTokenTypeCall__Inputs(this);
  }

  get outputs(): SetTokenTypeCall__Outputs {
    return new SetTokenTypeCall__Outputs(this);
  }
}

export class SetTokenTypeCall__Inputs {
  _call: SetTokenTypeCall;

  constructor(call: SetTokenTypeCall) {
    this._call = call;
  }

  get kind(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get ask(): SetTokenTypeCallAskStruct {
    return changetype<SetTokenTypeCallAskStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get supply(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get tokenURI(): string {
    return this._call.inputValues[4].value.toString();
  }

  get metadataURI(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class SetTokenTypeCall__Outputs {
  _call: SetTokenTypeCall;

  constructor(call: SetTokenTypeCall) {
    this._call = call;
  }

  get value0(): SetTokenTypeCallValue0Struct {
    return changetype<SetTokenTypeCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class SetTokenTypeCallAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class SetTokenTypeCallValue0Struct extends ethereum.Tuple {
  get kind(): i32 {
    return this[0].toI32();
  }

  get name(): string {
    return this[1].toString();
  }

  get ask(): SetTokenTypeCallValue0AskStruct {
    return changetype<SetTokenTypeCallValue0AskStruct>(this[2].toTuple());
  }

  get supply(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get minted(): BigInt {
    return this[5].toBigInt();
  }

  get data(): SetTokenTypeCallValue0DataStruct {
    return changetype<SetTokenTypeCallValue0DataStruct>(this[6].toTuple());
  }

  get bidShares(): SetTokenTypeCallValue0BidSharesStruct {
    return changetype<SetTokenTypeCallValue0BidSharesStruct>(this[7].toTuple());
  }
}

export class SetTokenTypeCallValue0AskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class SetTokenTypeCallValue0DataStruct extends ethereum.Tuple {
  get tokenURI(): string {
    return this[0].toString();
  }

  get metadataURI(): string {
    return this[1].toString();
  }

  get contentHash(): Bytes {
    return this[2].toBytes();
  }

  get metadataHash(): Bytes {
    return this[3].toBytes();
  }
}

export class SetTokenTypeCallValue0BidSharesStruct extends ethereum.Tuple {
  get prevOwner(): SetTokenTypeCallValue0BidSharesPrevOwnerStruct {
    return changetype<SetTokenTypeCallValue0BidSharesPrevOwnerStruct>(
      this[0].toTuple()
    );
  }

  get creator(): SetTokenTypeCallValue0BidSharesCreatorStruct {
    return changetype<SetTokenTypeCallValue0BidSharesCreatorStruct>(
      this[1].toTuple()
    );
  }

  get owner(): SetTokenTypeCallValue0BidSharesOwnerStruct {
    return changetype<SetTokenTypeCallValue0BidSharesOwnerStruct>(
      this[2].toTuple()
    );
  }
}

export class SetTokenTypeCallValue0BidSharesPrevOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetTokenTypeCallValue0BidSharesCreatorStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetTokenTypeCallValue0BidSharesOwnerStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }
}

export class SetTokenTypeAskCall extends ethereum.Call {
  get inputs(): SetTokenTypeAskCall__Inputs {
    return new SetTokenTypeAskCall__Inputs(this);
  }

  get outputs(): SetTokenTypeAskCall__Outputs {
    return new SetTokenTypeAskCall__Outputs(this);
  }
}

export class SetTokenTypeAskCall__Inputs {
  _call: SetTokenTypeAskCall;

  constructor(call: SetTokenTypeAskCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get ask(): SetTokenTypeAskCallAskStruct {
    return changetype<SetTokenTypeAskCallAskStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetTokenTypeAskCall__Outputs {
  _call: SetTokenTypeAskCall;

  constructor(call: SetTokenTypeAskCall) {
    this._call = call;
  }
}

export class SetTokenTypeAskCallAskStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get currency(): Address {
    return this[1].toAddress();
  }

  get offline(): boolean {
    return this[2].toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
